name: CI
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main
  workflow_dispatch:

env:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-s ./settings.xml --batch-mode"
  DOCKER_DRIVER: overlay2
  GPG_PASS_PHRASE: ${{ secrets.GPG_PASS_PHRASE }}
  RELEASE: ${{ vars.RELEASE }}
  MAVEN_REPO_TOKEN: ${{ vars.MAVEN_REPO_TOKEN }}
  MAVEN_REPO_TOKEN_PASS: ${{ vars.MAVEN_REPO_TOKEN_PASS }}

jobs:
  # version_info_deploy:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: semoss/docker
  #   if: ${{ vars.RELEASE != 'TRUE'  && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' || github.event_name == 'push') }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Version information
  #       run: |
  #         echo datetime=$(date "+%Y-%m-%d %H:%M:%S") > ver.txt
  #         echo version=${{ vars.VERSION }}-SNAPSHOT >> ver.txt
  #         cat ver.txt
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ver.txt
  #         path: ver.txt

  # version_info_release:
  #   runs-on: ubuntu-latest
  #   if: ${{ vars.RELEASE != 'TRUE' }} && github.event_name == 'workflow_dispatch'
  #   container:
  #     image: semoss/docker
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Version information
  #       run: |
  #         echo datetime=$(date "+%Y-%m-%d %H:%M:%S") > ver.txt
  #         echo version=${{ vars.VERSION }} >> ver.txt
  #         cat ver.txt
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ver.txt
  #         path: ver.txt

  # version_commit:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/svn/dev' && ${{ vars.RELEASE == 'TRUE' }}
  #   container:
  #     image: semoss/docker
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: List files
  #       run: ls
  #     - name: Show version file
  #       run: cat ver.txt
  #     - name: Setup subversion
  #       run: |
  #         sudo apt-get --allow-releaseinfo-change update -y
  #         sudo apt-get update -y
  #         sudo apt-get install -y subversion
  #     - name: Commit version to SVN
  #       run: |
  #         svn --username ${{ secrets.SVN_USER }} --password ${{ secrets.SVN_PASS }} checkout svn:///Semoss/dev SemossVer --depth empty
  #         cd semossVer
  #         svn --username ${{ secrets.SVN_USER }} --password ${{ secrets.SVN_PASS }} up ver.txt
  #         cp -rf ../ver.txt ver.txt
  #         svn --username ${{ secrets.SVN_USER }} --password ${{ secrets.SVN_PASS }} status -u
  #         svn --username ${{ secrets.SVN_USER }} --password ${{ secrets.SVN_PASS }} commit -m "VERSION"
  #         cd ..
  #         rm -rf semossVer

  build_dev:
    runs-on: self-hosted
    if: ${{ vars.RELEASE != 'TRUE'  && (github.event_name =='push' || github.event_name =='pull_request')  }}
    container:
      image: semoss/docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Setup Java
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: "adopt"
      #     java-version: "11"
      - name: Install dependencies
        run: |
          apt-get --allow-releaseinfo-change update -y
          apt-get update -y
          apt-get install -y openjfx
      - name: Build with Maven
        run: mvn $MAVEN_CLI_OPTS clean install -Dmaven.test.skip=${{ vars.SKIP_TESTS }} -Dci.version=${{ vars.VERSION }}-SNAPSHOT
      - name: Remove cache to save space
        run: rm -rf .m2/repository/org/semoss
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: semoss-jar
      #     path: target/semoss-${{ vars.VERSION }}-SNAPSHOT.jar

  build_deploy:
    runs-on: self-hosted
    if: ${{ vars.RELEASE != 'TRUE'  && github.event_name =='workflow_dispatch' }}
    container:
      image: semoss/docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Setup Java
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: "adopt"
      #     java-version: "11"
      - name: Install dependencies
        run: |
          apt-get --allow-releaseinfo-change update -y
          apt-get update -y
          apt-get install -y openjfx
          apt-get install -y gnupg2
      - name: Import GPG key
        run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg2 --batch --import
      - name: Refresh keys
        run: |
          echo "keyserver keyserver.ubuntu.com" > ~/.gnupg/gpg.conf
          gpg2 --refresh-key
          gpg --list-keys
      - name: Deploy with Maven
        shell: bash
        run: |
          REF_NAME=$( echo $GITHUB_REF | sed 's|refs/heads/||')
          if [[ "$REF_NAME" != 'dev' && "$REF_NAME" != 'main' ]]; then
            mvn clean install
          elif [[ "$REF_NAME" == 'dev' || "$REF_NAME" == 'main' ]]; then
            mvn $MAVEN_CLI_OPTS deploy -P deploy -Dmaven.test.skip=${{ vars.SKIP_TESTS }} -Dci.version=${{ vars.VERSION }}-SNAPSHOT
          fi
        env:
          GITHUB_REF: ${{ github.ref }}
      - name: Remove cache to save space
        run: rm -rf .m2/repository/org/semoss
      - name: Upload JAR to Nexus
        if: github.ref_name != 'dev' && github.ref_name != 'main'
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEUXS_PASSWORD: ${{secrets.NEUXS_PASSWORD }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          REF_NAME=$( echo $GITHUB_REF | sed 's|refs/heads/||')
          JAR_FILE=$(ls target/*.jar | head -n 1)
          curl -v -u "$NEXUS_USERNAME:$NEUXS_PASSWORD" \
           --upload-file "$JAR_FILE" \
           "https://artifact.semoss.org/repository/semoss-hosted-repo/$REF_NAME/$(basename $JAR_FILE)"
  build_release:
    runs-on: self-hosted
    if: ${{ vars.RELEASE == 'TRUE' && github.event_name == 'workflow_dispatch' }}
    container:
      image: semoss/docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Setup Java
      #   uses: actions/setup-java@v2
      #   with:
      #     distribution: "adopt"
      #     java-version: "11"
      - name: Install dependencies
        run: |
          apt-get --allow-releaseinfo-change update -y
          apt-get update -y
          apt-get install -y openjfx
          apt-get install -y gnupg2
      - name: Import GPG key
        run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg2 --batch --import
      - name: Refresh keys
        run: |
          echo "keyserver keyserver.ubuntu.com" > ~/.gnupg/gpg.conf
          gpg2 --refresh-key
          gpg --list-keys
      - name: Deploy with Maven
        run: mvn $MAVEN_CLI_OPTS deploy -P deploy -Dmaven.test.skip=${{ vars.SKIP_TESTS }} -Dci.version=${{ vars.VERSION }}
      - name: Remove cache to save space
        run: rm -rf .m2/repository/org/semoss
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: target/surefire-reports
      #     path: target/semoss-${{ vars.VERSION }}.jar
