/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class APanelComment extends PPanelComment
{
    private TPanelcomment _panelcomment_;
    private TLPar _lPar_;
    private TWord _text_;
    private TComma _c1_;
    private TId _group_;
    private TComma _c2_;
    private TId _type_;
    private TComma _c3_;
    private PWordOrNum _location_;
    private TRPar _rPar_;

    public APanelComment()
    {
        // Constructor
    }

    public APanelComment(
        @SuppressWarnings("hiding") TPanelcomment _panelcomment_,
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") TWord _text_,
        @SuppressWarnings("hiding") TComma _c1_,
        @SuppressWarnings("hiding") TId _group_,
        @SuppressWarnings("hiding") TComma _c2_,
        @SuppressWarnings("hiding") TId _type_,
        @SuppressWarnings("hiding") TComma _c3_,
        @SuppressWarnings("hiding") PWordOrNum _location_,
        @SuppressWarnings("hiding") TRPar _rPar_)
    {
        // Constructor
        setPanelcomment(_panelcomment_);

        setLPar(_lPar_);

        setText(_text_);

        setC1(_c1_);

        setGroup(_group_);

        setC2(_c2_);

        setType(_type_);

        setC3(_c3_);

        setLocation(_location_);

        setRPar(_rPar_);

    }

    @Override
    public Object clone()
    {
        return new APanelComment(
            cloneNode(this._panelcomment_),
            cloneNode(this._lPar_),
            cloneNode(this._text_),
            cloneNode(this._c1_),
            cloneNode(this._group_),
            cloneNode(this._c2_),
            cloneNode(this._type_),
            cloneNode(this._c3_),
            cloneNode(this._location_),
            cloneNode(this._rPar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPanelComment(this);
    }

    public TPanelcomment getPanelcomment()
    {
        return this._panelcomment_;
    }

    public void setPanelcomment(TPanelcomment node)
    {
        if(this._panelcomment_ != null)
        {
            this._panelcomment_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._panelcomment_ = node;
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public TWord getText()
    {
        return this._text_;
    }

    public void setText(TWord node)
    {
        if(this._text_ != null)
        {
            this._text_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._text_ = node;
    }

    public TComma getC1()
    {
        return this._c1_;
    }

    public void setC1(TComma node)
    {
        if(this._c1_ != null)
        {
            this._c1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._c1_ = node;
    }

    public TId getGroup()
    {
        return this._group_;
    }

    public void setGroup(TId node)
    {
        if(this._group_ != null)
        {
            this._group_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._group_ = node;
    }

    public TComma getC2()
    {
        return this._c2_;
    }

    public void setC2(TComma node)
    {
        if(this._c2_ != null)
        {
            this._c2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._c2_ = node;
    }

    public TId getType()
    {
        return this._type_;
    }

    public void setType(TId node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TComma getC3()
    {
        return this._c3_;
    }

    public void setC3(TComma node)
    {
        if(this._c3_ != null)
        {
            this._c3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._c3_ = node;
    }

    public PWordOrNum getLocation()
    {
        return this._location_;
    }

    public void setLocation(PWordOrNum node)
    {
        if(this._location_ != null)
        {
            this._location_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._location_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._panelcomment_)
            + toString(this._lPar_)
            + toString(this._text_)
            + toString(this._c1_)
            + toString(this._group_)
            + toString(this._c2_)
            + toString(this._type_)
            + toString(this._c3_)
            + toString(this._location_)
            + toString(this._rPar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._panelcomment_ == child)
        {
            this._panelcomment_ = null;
            return;
        }

        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._text_ == child)
        {
            this._text_ = null;
            return;
        }

        if(this._c1_ == child)
        {
            this._c1_ = null;
            return;
        }

        if(this._group_ == child)
        {
            this._group_ = null;
            return;
        }

        if(this._c2_ == child)
        {
            this._c2_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._c3_ == child)
        {
            this._c3_ = null;
            return;
        }

        if(this._location_ == child)
        {
            this._location_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._panelcomment_ == oldChild)
        {
            setPanelcomment((TPanelcomment) newChild);
            return;
        }

        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._text_ == oldChild)
        {
            setText((TWord) newChild);
            return;
        }

        if(this._c1_ == oldChild)
        {
            setC1((TComma) newChild);
            return;
        }

        if(this._group_ == oldChild)
        {
            setGroup((TId) newChild);
            return;
        }

        if(this._c2_ == oldChild)
        {
            setC2((TComma) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((TId) newChild);
            return;
        }

        if(this._c3_ == oldChild)
        {
            setC3((TComma) newChild);
            return;
        }

        if(this._location_ == oldChild)
        {
            setLocation((PWordOrNum) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
