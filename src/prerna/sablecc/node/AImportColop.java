/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AImportColop extends PColop
{
    private PImportColumn _importColumn_;

    public AImportColop()
    {
        // Constructor
    }

    public AImportColop(
        @SuppressWarnings("hiding") PImportColumn _importColumn_)
    {
        // Constructor
        setImportColumn(_importColumn_);

    }

    @Override
    public Object clone()
    {
        return new AImportColop(
            cloneNode(this._importColumn_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAImportColop(this);
    }

    public PImportColumn getImportColumn()
    {
        return this._importColumn_;
    }

    public void setImportColumn(PImportColumn node)
    {
        if(this._importColumn_ != null)
        {
            this._importColumn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._importColumn_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._importColumn_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._importColumn_ == child)
        {
            this._importColumn_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._importColumn_ == oldChild)
        {
            setImportColumn((PImportColumn) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
