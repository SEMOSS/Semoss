/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class APanelClosePanelop extends PPanelop
{
    private PPanelClose _panelClose_;

    public APanelClosePanelop()
    {
        // Constructor
    }

    public APanelClosePanelop(
        @SuppressWarnings("hiding") PPanelClose _panelClose_)
    {
        // Constructor
        setPanelClose(_panelClose_);

    }

    @Override
    public Object clone()
    {
        return new APanelClosePanelop(
            cloneNode(this._panelClose_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPanelClosePanelop(this);
    }

    public PPanelClose getPanelClose()
    {
        return this._panelClose_;
    }

    public void setPanelClose(PPanelClose node)
    {
        if(this._panelClose_ != null)
        {
            this._panelClose_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._panelClose_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._panelClose_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._panelClose_ == child)
        {
            this._panelClose_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._panelClose_ == oldChild)
        {
            setPanelClose((PPanelClose) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
