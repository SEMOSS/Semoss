/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADatabaseConceptPropertiesDatabaseop extends PDatabaseop
{
    private PDatabaseConceptProperties _databaseConceptProperties_;

    public ADatabaseConceptPropertiesDatabaseop()
    {
        // Constructor
    }

    public ADatabaseConceptPropertiesDatabaseop(
        @SuppressWarnings("hiding") PDatabaseConceptProperties _databaseConceptProperties_)
    {
        // Constructor
        setDatabaseConceptProperties(_databaseConceptProperties_);

    }

    @Override
    public Object clone()
    {
        return new ADatabaseConceptPropertiesDatabaseop(
            cloneNode(this._databaseConceptProperties_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADatabaseConceptPropertiesDatabaseop(this);
    }

    public PDatabaseConceptProperties getDatabaseConceptProperties()
    {
        return this._databaseConceptProperties_;
    }

    public void setDatabaseConceptProperties(PDatabaseConceptProperties node)
    {
        if(this._databaseConceptProperties_ != null)
        {
            this._databaseConceptProperties_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._databaseConceptProperties_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._databaseConceptProperties_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._databaseConceptProperties_ == child)
        {
            this._databaseConceptProperties_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._databaseConceptProperties_ == oldChild)
        {
            setDatabaseConceptProperties((PDatabaseConceptProperties) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
