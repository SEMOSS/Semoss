/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.Analysis;

@SuppressWarnings("nls")
public final class AClearData extends PClearData
{
    private TDatacleartoken _datacleartoken_;
    private TLPar _lp_;
    private TRPar _rp_;

    public AClearData()
    {
        // Constructor
    }

    public AClearData(
        @SuppressWarnings("hiding") TDatacleartoken _datacleartoken_,
        @SuppressWarnings("hiding") TLPar _lp_,
        @SuppressWarnings("hiding") TRPar _rp_)
    {
        // Constructor
        setDatacleartoken(_datacleartoken_);

        setLp(_lp_);

        setRp(_rp_);

    }

    @Override
    public Object clone()
    {
        return new AClearData(
            cloneNode(this._datacleartoken_),
            cloneNode(this._lp_),
            cloneNode(this._rp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAClearData(this);
    }

    public TDatacleartoken getDatacleartoken()
    {
        return this._datacleartoken_;
    }

    public void setDatacleartoken(TDatacleartoken node)
    {
        if(this._datacleartoken_ != null)
        {
            this._datacleartoken_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._datacleartoken_ = node;
    }

    public TLPar getLp()
    {
        return this._lp_;
    }

    public void setLp(TLPar node)
    {
        if(this._lp_ != null)
        {
            this._lp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lp_ = node;
    }

    public TRPar getRp()
    {
        return this._rp_;
    }

    public void setRp(TRPar node)
    {
        if(this._rp_ != null)
        {
            this._rp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._datacleartoken_)
            + toString(this._lp_)
            + toString(this._rp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._datacleartoken_ == child)
        {
            this._datacleartoken_ = null;
            return;
        }

        if(this._lp_ == child)
        {
            this._lp_ = null;
            return;
        }

        if(this._rp_ == child)
        {
            this._rp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._datacleartoken_ == oldChild)
        {
            setDatacleartoken((TDatacleartoken) newChild);
            return;
        }

        if(this._lp_ == oldChild)
        {
            setLp((TLPar) newChild);
            return;
        }

        if(this._rp_ == oldChild)
        {
            setRp((TRPar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
