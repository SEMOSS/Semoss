/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.Analysis;

@SuppressWarnings("nls")
public final class AInputInputOrExpr extends PInputOrExpr
{
    private PUserInput _userInput_;

    public AInputInputOrExpr()
    {
        // Constructor
    }

    public AInputInputOrExpr(
        @SuppressWarnings("hiding") PUserInput _userInput_)
    {
        // Constructor
        setUserInput(_userInput_);

    }

    @Override
    public Object clone()
    {
        return new AInputInputOrExpr(
            cloneNode(this._userInput_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInputInputOrExpr(this);
    }

    public PUserInput getUserInput()
    {
        return this._userInput_;
    }

    public void setUserInput(PUserInput node)
    {
        if(this._userInput_ != null)
        {
            this._userInput_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._userInput_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._userInput_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._userInput_ == child)
        {
            this._userInput_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._userInput_ == oldChild)
        {
            setUserInput((PUserInput) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
