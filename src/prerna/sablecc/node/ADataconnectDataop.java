/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADataconnectDataop extends PDataop
{
    private PDataconnect _dataconnect_;

    public ADataconnectDataop()
    {
        // Constructor
    }

    public ADataconnectDataop(
        @SuppressWarnings("hiding") PDataconnect _dataconnect_)
    {
        // Constructor
        setDataconnect(_dataconnect_);

    }

    @Override
    public Object clone()
    {
        return new ADataconnectDataop(
            cloneNode(this._dataconnect_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADataconnectDataop(this);
    }

    public PDataconnect getDataconnect()
    {
        return this._dataconnect_;
    }

    public void setDataconnect(PDataconnect node)
    {
        if(this._dataconnect_ != null)
        {
            this._dataconnect_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataconnect_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dataconnect_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dataconnect_ == child)
        {
            this._dataconnect_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dataconnect_ == oldChild)
        {
            setDataconnect((PDataconnect) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
