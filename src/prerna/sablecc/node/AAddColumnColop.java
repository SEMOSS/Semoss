/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.Analysis;

@SuppressWarnings("nls")
public final class AAddColumnColop extends PColop
{
    private PAddColumn _addColumn_;

    public AAddColumnColop()
    {
        // Constructor
    }

    public AAddColumnColop(
        @SuppressWarnings("hiding") PAddColumn _addColumn_)
    {
        // Constructor
        setAddColumn(_addColumn_);

    }

    @Override
    public Object clone()
    {
        return new AAddColumnColop(
            cloneNode(this._addColumn_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAddColumnColop(this);
    }

    public PAddColumn getAddColumn()
    {
        return this._addColumn_;
    }

    public void setAddColumn(PAddColumn node)
    {
        if(this._addColumn_ != null)
        {
            this._addColumn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._addColumn_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._addColumn_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._addColumn_ == child)
        {
            this._addColumn_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._addColumn_ == oldChild)
        {
            setAddColumn((PAddColumn) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
