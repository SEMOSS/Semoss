/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.node;

import prerna.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AClearCacheColop extends PColop
{
    private PClearCache _clearCache_;

    public AClearCacheColop()
    {
        // Constructor
    }

    public AClearCacheColop(
        @SuppressWarnings("hiding") PClearCache _clearCache_)
    {
        // Constructor
        setClearCache(_clearCache_);

    }

    @Override
    public Object clone()
    {
        return new AClearCacheColop(
            cloneNode(this._clearCache_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAClearCacheColop(this);
    }

    public PClearCache getClearCache()
    {
        return this._clearCache_;
    }

    public void setClearCache(PClearCache node)
    {
        if(this._clearCache_ != null)
        {
            this._clearCache_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._clearCache_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._clearCache_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._clearCache_ == child)
        {
            this._clearCache_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._clearCache_ == oldChild)
        {
            setClearCache((PClearCache) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
