/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.lexer;

import java.io.*;
import prerna.sablecc.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQuote(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCol(line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComparator(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColadd(line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TApi(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMath(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColjoin(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColprefix(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTablePrefix(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TValprefix(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColremove(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColfilter(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColunfilter(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColimport(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColset(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColpivot(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColfocus(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColalias(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCollink(line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShowHide(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCurlBracket(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCurlBracket(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGroup(line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSpace(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqual(line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNewline(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJava(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TR(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPython(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProc(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThis(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImportType(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelType(text, line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataimporttoken(line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLiteral(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THelpToken(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVizchange(line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlphanumeric(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{0, 9, 1}, {10, 10, 2}, {11, 12, 1}, {13, 13, 3}, {14, 31, 1}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {35, 36, 1}, {37, 37, 7}, {38, 38, 1}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {63, 64, 1}, {65, 90, 23}, {91, 91, 24}, {92, 92, 25}, {93, 93, 26}, {94, 94, 1}, {95, 95, 27}, {96, 96, 1}, {97, 97, 28}, {98, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 29}, {102, 102, 32}, {103, 103, 33}, {104, 104, 29}, {105, 105, 34}, {106, 106, 35}, {107, 107, 29}, {108, 108, 36}, {109, 109, 37}, {110, 110, 38}, {111, 111, 39}, {112, 112, 40}, {113, 113, 29}, {114, 114, 41}, {115, 115, 42}, {116, 116, 43}, {117, 117, 29}, {118, 118, 44}, {119, 122, 29}, {123, 123, 45}, {124, 124, 1}, {125, 125, 46}, {126, 65535, 1}, },
            {},
            {{10, 10, 47}, {13, 13, 48}, {32, 32, 49}, },
            {{10, 10, 47}, {13, 13, 50}, {32, 32, 51}, },
            {{10, 32, -5}, },
            {{61, 61, 52}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{48, 57, 53}, {65, 90, 54}, {95, 95, 55}, {97, 122, 56}, },
            {},
            {},
            {{61, 61, 57}, },
            {},
            {{61, 61, 58}, },
            {{48, 57, 59}, {65, 122, -19}, },
            {},
            {{110, 110, 60}, {114, 114, 61}, },
            {},
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 111, 56}, {112, 112, 62}, {113, 122, 56}, },
            {{48, 122, -25}, },
            {{48, 57, 59}, {58, 58, 63}, {65, 95, -19}, {97, 97, 64}, {98, 110, 56}, {111, 111, 65}, {112, 113, 56}, {114, 114, 66}, {115, 122, 56}, },
            {{48, 95, -25}, {97, 97, 67}, {98, 122, 56}, },
            {{48, 95, -25}, {97, 107, 56}, {108, 108, 68}, {109, 122, 56}, },
            {{48, 95, -25}, {97, 113, 56}, {114, 114, 69}, {115, 122, 56}, },
            {{48, 95, -25}, {97, 109, 56}, {110, 110, 70}, {111, 122, 56}, },
            {{48, 57, 59}, {58, 58, 71}, {65, 122, -19}, },
            {{48, 95, -25}, {97, 100, 56}, {101, 101, 72}, {102, 104, 56}, {105, 105, 73}, {106, 122, 56}, },
            {{46, 46, 74}, {48, 57, 59}, {58, 58, 75}, {65, 95, -19}, {97, 97, 76}, {98, 122, 56}, },
            {{48, 95, -25}, {97, 116, 56}, {117, 117, 77}, {118, 122, 56}, },
            {{48, 95, -25}, {97, 101, 56}, {102, 102, 78}, {103, 109, 56}, {110, 110, 79}, {111, 116, 56}, {117, 117, 80}, {118, 122, 56}, },
            {{48, 57, 59}, {58, 58, 81}, {65, 122, -19}, },
            {{48, 57, 59}, {58, 58, 82}, {65, 95, -19}, {97, 104, 56}, {105, 105, 83}, {106, 122, 56}, },
            {{48, 100, -38}, {101, 101, 84}, {102, 122, 56}, },
            {{48, 57, 59}, {58, 58, 85}, {65, 95, -19}, {97, 103, 56}, {104, 104, 86}, {105, 113, 56}, {114, 114, 87}, {115, 122, 56}, },
            {{48, 57, 59}, {58, 58, 88}, {65, 104, -43}, {105, 105, 89}, {106, 122, 56}, },
            {},
            {},
            {{10, 32, -4}, },
            {{10, 32, -4}, },
            {{10, 32, -4}, },
            {{10, 32, -5}, },
            {{10, 32, -5}, },
            {},
            {{48, 122, -19}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {},
            {},
            {{48, 122, -25}, },
            {},
            {{92, 92, 90}, },
            {{48, 95, -25}, {97, 104, 56}, {105, 105, 91}, {106, 122, 56}, },
            {},
            {{48, 107, -34}, {108, 108, 92}, {109, 122, 56}, },
            {{48, 107, -34}, {108, 108, 93}, {109, 122, 56}, },
            {{48, 95, -25}, {97, 110, 56}, {111, 111, 94}, {112, 122, 56}, },
            {{48, 95, -25}, {97, 115, 56}, {116, 116, 95}, {117, 122, 56}, },
            {{48, 95, -25}, {97, 97, 96}, {98, 122, 56}, },
            {{48, 110, -68}, {111, 111, 97}, {112, 122, 56}, },
            {{48, 101, -41}, {102, 102, 98}, {103, 109, 56}, {110, 110, 99}, {111, 122, 56}, },
            {},
            {{48, 101, -41}, {102, 102, 100}, {103, 122, 56}, },
            {{48, 95, -25}, {97, 106, 56}, {107, 107, 101}, {108, 109, 56}, {110, 110, 102}, {111, 122, 56}, },
            {},
            {},
            {{48, 115, -69}, {116, 116, 103}, {117, 122, 56}, },
            {{48, 107, -34}, {108, 108, 104}, {109, 122, 56}, },
            {{48, 101, -41}, {102, 102, 105}, {103, 122, 56}, },
            {{48, 122, -25}, },
            {{48, 115, -69}, {116, 116, 106}, {117, 122, 56}, },
            {},
            {},
            {{48, 95, -25}, {97, 102, 56}, {103, 103, 107}, {104, 122, 56}, },
            {{48, 107, -34}, {108, 108, 108}, {109, 122, 56}, },
            {},
            {{48, 104, -64}, {105, 105, 109}, {106, 122, 56}, },
            {{48, 100, -38}, {101, 101, 110}, {102, 122, 56}, },
            {},
            {{48, 95, -25}, {97, 121, 56}, {122, 122, 111}, },
            {{110, 110, 60}, },
            {{48, 57, 59}, {58, 58, 112}, {65, 122, -19}, },
            {{48, 107, -34}, {108, 108, 113}, {109, 122, 56}, },
            {{46, 46, 114}, {48, 122, -25}, },
            {{48, 95, -25}, {97, 114, 56}, {115, 115, 115}, {116, 122, 56}, },
            {{48, 95, -25}, {97, 97, 116}, {98, 122, 56}, },
            {{48, 115, -69}, {116, 116, 117}, {117, 122, 56}, },
            {{48, 116, -40}, {117, 117, 118}, {118, 122, 56}, },
            {{48, 110, -68}, {111, 111, 119}, {112, 122, 56}, },
            {{48, 100, -38}, {101, 101, 120}, {102, 122, 56}, },
            {{48, 115, -69}, {116, 116, 121}, {117, 122, 56}, },
            {{48, 100, -38}, {101, 101, 122}, {102, 122, 56}, },
            {{48, 106, -75}, {107, 107, 123}, {108, 122, 56}, },
            {{48, 95, -25}, {97, 103, 56}, {104, 104, 124}, {105, 122, 56}, },
            {{48, 107, -34}, {108, 108, 125}, {109, 122, 56}, },
            {{48, 122, -25}, },
            {{48, 100, -38}, {101, 101, 126}, {102, 122, 56}, },
            {{48, 103, -105}, {104, 104, 127}, {105, 122, 56}, },
            {{48, 101, -41}, {102, 102, 128}, {103, 122, 56}, },
            {{48, 114, -96}, {115, 115, 129}, {116, 122, 56}, },
            {{48, 100, -38}, {101, 101, 130}, {102, 122, 56}, },
            {{46, 46, 131}, {48, 122, -25}, },
            {},
            {{48, 57, 59}, {58, 58, 132}, {65, 122, -19}, },
            {{97, 97, 133}, {102, 102, 134}, {105, 105, 135}, {106, 106, 136}, {112, 112, 137}, {114, 114, 138}, {115, 115, 139}, {117, 117, 140}, },
            {{48, 114, -96}, {115, 115, 141}, {116, 122, 56}, },
            {{46, 46, 142}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 111, -30}, {112, 112, 143}, {113, 122, 56}, },
            {{46, 46, 144}, {48, 122, -25}, },
            {{48, 113, -35}, {114, 114, 145}, {115, 122, 56}, },
            {{46, 46, 146}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 57, 59}, {58, 58, 147}, {65, 122, -19}, },
            {{46, 46, 148}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 113, -35}, {114, 114, 149}, {115, 122, 56}, },
            {{48, 115, -69}, {116, 116, 150}, {117, 122, 56}, },
            {{46, 46, 151}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{99, 99, 152}, },
            {},
            {{100, 100, 153}, {108, 108, 154}, },
            {{105, 105, 155}, {111, 111, 156}, },
            {{109, 109, 157}, },
            {{111, 111, 158}, },
            {{105, 105, 159}, },
            {{101, 101, 160}, },
            {{101, 101, 161}, },
            {{110, 110, 162}, },
            {{46, 46, 163}, {48, 122, -25}, },
            {{105, 105, 164}, },
            {{48, 57, 59}, {58, 58, 165}, {65, 122, -19}, },
            {{104, 104, 166}, },
            {{46, 46, 167}, {48, 122, -25}, },
            {{111, 111, 168}, },
            {},
            {},
            {{46, 46, 169}, {48, 122, -25}, },
            {{46, 46, 170}, {48, 122, -25}, },
            {{106, 106, 171}, },
            {{104, 104, 172}, },
            {{100, 100, 173}, },
            {{105, 105, 174}, },
            {{108, 108, 175}, },
            {{99, 99, 176}, },
            {{112, 112, 177}, },
            {{105, 105, 178}, },
            {{118, 118, 179}, },
            {{109, 109, 180}, },
            {{116, 116, 181}, },
            {{102, 102, 182}, },
            {{106, 106, 183}, },
            {{109, 109, 184}, },
            {},
            {{101, 101, 185}, },
            {{106, 106, 186}, },
            {{117, 117, 187}, },
            {{106, 106, 188}, },
            {{111, 111, 189}, },
            {{111, 111, 190}, },
            {{97, 97, 191}, },
            {},
            {{97, 97, 192}, },
            {{116, 116, 193}, },
            {{117, 117, 194}, },
            {{111, 111, 195}, },
            {{110, 110, 196}, },
            {{111, 111, 197}, },
            {{111, 111, 198}, },
            {},
            {{105, 105, 199}, },
            {{111, 111, 200}, },
            {{112, 112, 201}, },
            {{108, 108, 202}, },
            {{111, 111, 203}, },
            {{116, 116, 204}, },
            {{111, 111, 205}, },
            {{117, 117, 206}, },
            {{105, 105, 207}, },
            {{110, 110, 208}, },
            {{115, 115, 209}, },
            {{101, 101, 210}, },
            {{115, 115, 211}, },
            {{114, 114, 212}, },
            {},
            {{116, 116, 213}, },
            {{118, 118, 214}, },
            {{108, 108, 215}, },
            {{105, 105, 216}, },
            {{111, 111, 217}, },
            {{112, 112, 218}, },
            {{105, 105, 219}, },
            {{101, 101, 220}, },
            {{105, 105, 221}, },
            {{116, 116, 222}, },
            {{110, 110, 223}, },
            {{103, 103, 224}, },
            {},
            {{114, 114, 225}, },
            {},
            {{116, 116, 226}, },
            {},
            {{101, 101, 227}, },
            {{116, 116, 228}, },
            {{110, 110, 229}, },
            {{114, 114, 230}, },
            {},
            {{110, 110, 231}, },
            {{114, 114, 232}, },
            {{110, 110, 233}, },
            {{101, 101, 234}, },
            {},
            {{101, 101, 235}, },
            {},
            {},
            {},
            {{101, 101, 236}, },
            {},
            {{116, 116, 237}, },
            {},
            {{46, 46, 238}, },
            {},
            {{114, 114, 239}, },
            {},
            {{114, 114, 240}, },
            {},
            {{106, 106, 241}, },
            {{46, 46, 242}, },
            {},
            {{111, 111, 243}, },
            {{106, 106, 244}, },
            {{105, 105, 245}, },
            {{111, 111, 246}, },
            {{110, 110, 247}, },
            {{105, 105, 248}, },
            {},
            {{110, 110, 249}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {1, 54, 38, 38, 38, 54, 9, 30, 9, 31, 32, 7, 5, 8, 6, 2, 10, 0, 4, 3, 12, 12, 12, 1, 33, 54, 34, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 35, 36, 38, 38, 38, 38, 38, 12, 0, 1, 1, 1, 12, 12, 1, 41, -1, 1, 17, 1, 1, 1, 1, 1, 1, 1, 42, 1, 1, 15, 45, 1, 1, 1, 1, 1, 44, 43, 1, 1, 18, 1, 1, 19, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, 28, 15, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, 26, -1, 25, -1, -1, -1, -1, 52, -1, -1, -1, -1, 49, -1, 21, 23, 20, -1, 49, -1, 49, -1, 49, -1, 53, -1, 50, -1, -1, 22, -1, -1, -1, -1, -1, -1, 49, -1, 49, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
