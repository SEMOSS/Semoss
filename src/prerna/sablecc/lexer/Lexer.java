/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc.lexer;

import java.io.*;
import prerna.sablecc.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCol(line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComparator(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColadd(line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TApi(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMath(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColjoin(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColprefix(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTablePrefix(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TValprefix(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColremove(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColfilter(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColunfilter(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColimport(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColset(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColpivot(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColfocus(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColalias(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCollink(line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShowHide(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCurlBracket(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCurlBracket(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGroup(line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSpace(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqual(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNewline(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJava(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TR(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPython(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProc(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThis(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImportType(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelType(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataimporttoken(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataremovetoken(line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLiteral(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THelpToken(line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCodeblock(text, line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWord(text, line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPanelviz(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPanelcomment(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPanelclone(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDataframe(line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFileText(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{10, 10, 1}, {13, 13, 2}, {32, 32, 3}, {33, 33, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {46, 46, 14}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {65, 90, 22}, {91, 91, 23}, {92, 92, 24}, {93, 93, 25}, {95, 95, 26}, {97, 97, 27}, {98, 98, 28}, {99, 99, 29}, {100, 100, 30}, {101, 101, 28}, {102, 102, 31}, {103, 103, 32}, {104, 104, 28}, {105, 105, 33}, {106, 106, 34}, {107, 107, 28}, {108, 108, 35}, {109, 109, 36}, {110, 110, 37}, {111, 111, 38}, {112, 112, 39}, {113, 113, 28}, {114, 114, 40}, {115, 115, 41}, {116, 116, 42}, {117, 117, 28}, {118, 118, 43}, {119, 122, 28}, {123, 123, 44}, {125, 125, 45}, },
            {{10, 10, 1}, {13, 13, 46}, {32, 32, 47}, },
            {{10, 32, -2}, },
            {{10, 32, -2}, },
            {{61, 61, 48}, },
            {{0, 33, 49}, {35, 38, 49}, {40, 65535, 49}, },
            {},
            {{0, 65535, -7}, },
            {},
            {},
            {},
            {},
            {},
            {{45, 45, 50}, {48, 57, 51}, {65, 90, 52}, {95, 95, 53}, {97, 122, 54}, },
            {},
            {},
            {{45, 45, 55}, {48, 57, 16}, {65, 90, 22}, {95, 95, 26}, {97, 122, 28}, },
            {},
            {},
            {{61, 61, 56}, {115, 115, 57}, },
            {},
            {{61, 61, 58}, },
            {{45, 45, 55}, {48, 57, 59}, {65, 122, -18}, },
            {},
            {{110, 110, 60}, {114, 114, 61}, },
            {},
            {{45, 122, -24}, },
            {{45, 95, -24}, {97, 111, 28}, {112, 112, 62}, {113, 122, 28}, },
            {{45, 122, -24}, },
            {{45, 57, -24}, {58, 58, 63}, {65, 95, -18}, {97, 97, 64}, {98, 110, 28}, {111, 111, 65}, {112, 113, 28}, {114, 114, 66}, {115, 122, 28}, },
            {{45, 95, -24}, {97, 97, 67}, {98, 122, 28}, },
            {{45, 95, -24}, {97, 107, 28}, {108, 108, 68}, {109, 122, 28}, },
            {{45, 95, -24}, {97, 113, 28}, {114, 114, 69}, {115, 122, 28}, },
            {{45, 95, -24}, {97, 109, 28}, {110, 110, 70}, {111, 122, 28}, },
            {{45, 57, -24}, {58, 58, 71}, {65, 122, -18}, },
            {{45, 95, -24}, {97, 100, 28}, {101, 101, 72}, {102, 104, 28}, {105, 105, 73}, {106, 122, 28}, },
            {{45, 45, 55}, {46, 46, 74}, {48, 57, 59}, {58, 58, 75}, {65, 95, -18}, {97, 97, 76}, {98, 122, 28}, },
            {{45, 95, -24}, {97, 116, 28}, {117, 117, 77}, {118, 122, 28}, },
            {{45, 95, -24}, {97, 101, 28}, {102, 102, 78}, {103, 109, 28}, {110, 110, 79}, {111, 116, 28}, {117, 117, 80}, {118, 122, 28}, },
            {{45, 57, -24}, {58, 58, 81}, {65, 95, -18}, {97, 97, 82}, {98, 122, 28}, },
            {{45, 57, -24}, {58, 58, 83}, {65, 95, -18}, {97, 104, 28}, {105, 105, 84}, {106, 122, 28}, },
            {{45, 100, -37}, {101, 101, 85}, {102, 122, 28}, },
            {{45, 57, -24}, {58, 58, 86}, {65, 95, -18}, {97, 103, 28}, {104, 104, 87}, {105, 113, 28}, {114, 114, 88}, {115, 122, 28}, },
            {{45, 57, -24}, {58, 58, 89}, {65, 122, -18}, },
            {{0, 121, 90}, {122, 122, 91}, {123, 65535, 90}, },
            {},
            {{10, 32, -3}, },
            {{10, 32, -3}, },
            {},
            {{0, 33, 49}, {34, 34, 92}, {35, 38, 49}, {39, 39, 93}, {40, 65535, 49}, },
            {{45, 45, 55}, {48, 122, -15}, },
            {{45, 122, -52}, },
            {{45, 122, -52}, },
            {{45, 122, -52}, },
            {{45, 122, -52}, },
            {{45, 122, -52}, },
            {},
            {{116, 116, 94}, },
            {},
            {{45, 122, -24}, },
            {},
            {{92, 92, 95}, },
            {{45, 95, -24}, {97, 104, 28}, {105, 105, 96}, {106, 122, 28}, },
            {},
            {{45, 107, -33}, {108, 108, 97}, {109, 122, 28}, },
            {{45, 107, -33}, {108, 108, 98}, {109, 122, 28}, },
            {{45, 95, -24}, {97, 110, 28}, {111, 111, 99}, {112, 122, 28}, },
            {{45, 95, -24}, {97, 115, 28}, {116, 116, 100}, {117, 122, 28}, },
            {{45, 95, -24}, {97, 97, 101}, {98, 122, 28}, },
            {{45, 110, -68}, {111, 111, 102}, {112, 122, 28}, },
            {{45, 101, -40}, {102, 102, 103}, {103, 109, 28}, {110, 110, 104}, {111, 122, 28}, },
            {},
            {{45, 101, -40}, {102, 102, 105}, {103, 122, 28}, },
            {{45, 95, -24}, {97, 106, 28}, {107, 107, 106}, {108, 109, 28}, {110, 110, 107}, {111, 122, 28}, },
            {},
            {},
            {{45, 115, -69}, {116, 116, 108}, {117, 122, 28}, },
            {{45, 107, -33}, {108, 108, 109}, {109, 122, 28}, },
            {{45, 101, -40}, {102, 102, 110}, {103, 122, 28}, },
            {{45, 122, -24}, },
            {{45, 115, -69}, {116, 116, 111}, {117, 122, 28}, },
            {},
            {{45, 109, -35}, {110, 110, 112}, {111, 122, 28}, },
            {},
            {{45, 95, -24}, {97, 102, 28}, {103, 103, 113}, {104, 122, 28}, },
            {{45, 107, -33}, {108, 108, 114}, {109, 122, 28}, },
            {},
            {{45, 104, -64}, {105, 105, 115}, {106, 122, 28}, },
            {{45, 100, -37}, {101, 101, 116}, {102, 122, 28}, },
            {},
            {{0, 65535, -46}, },
            {{0, 121, 90}, {122, 122, 117}, {123, 65535, 90}, },
            {},
            {},
            {{97, 97, 118}, },
            {{110, 110, 60}, },
            {{45, 57, -24}, {58, 58, 119}, {65, 122, -18}, },
            {{45, 107, -33}, {108, 108, 120}, {109, 122, 28}, },
            {{45, 45, 55}, {46, 46, 121}, {48, 122, -24}, },
            {{45, 95, -24}, {97, 114, 28}, {115, 115, 122}, {116, 122, 28}, },
            {{45, 95, -24}, {97, 97, 123}, {98, 122, 28}, },
            {{45, 115, -69}, {116, 116, 124}, {117, 122, 28}, },
            {{45, 116, -39}, {117, 117, 125}, {118, 122, 28}, },
            {{45, 110, -68}, {111, 111, 126}, {112, 122, 28}, },
            {{45, 100, -37}, {101, 101, 127}, {102, 122, 28}, },
            {{45, 115, -69}, {116, 116, 128}, {117, 122, 28}, },
            {{45, 100, -37}, {101, 101, 129}, {102, 122, 28}, },
            {{45, 106, -75}, {107, 107, 130}, {108, 122, 28}, },
            {{45, 95, -24}, {97, 103, 28}, {104, 104, 131}, {105, 122, 28}, },
            {{45, 107, -33}, {108, 108, 132}, {109, 122, 28}, },
            {{45, 122, -24}, },
            {{45, 100, -37}, {101, 101, 133}, {102, 122, 28}, },
            {{45, 100, -37}, {101, 101, 134}, {102, 122, 28}, },
            {{45, 103, -110}, {104, 104, 135}, {105, 122, 28}, },
            {{45, 101, -40}, {102, 102, 136}, {103, 122, 28}, },
            {{45, 114, -101}, {115, 115, 137}, {116, 122, 28}, },
            {{45, 100, -37}, {101, 101, 138}, {102, 122, 28}, },
            {{0, 121, 90}, {122, 122, 139}, {123, 65535, 90}, },
            {{114, 114, 140}, },
            {},
            {{45, 57, -24}, {58, 58, 141}, {65, 122, -18}, },
            {{97, 97, 142}, {102, 102, 143}, {105, 105, 144}, {106, 106, 145}, {112, 112, 146}, {114, 114, 147}, {115, 115, 148}, {117, 117, 149}, },
            {{45, 114, -101}, {115, 115, 150}, {116, 122, 28}, },
            {{45, 45, 55}, {46, 46, 151}, {48, 122, -24}, },
            {{45, 122, -24}, },
            {{45, 111, -29}, {112, 112, 152}, {113, 122, 28}, },
            {{45, 45, 55}, {46, 46, 153}, {48, 122, -24}, },
            {{45, 113, -34}, {114, 114, 154}, {115, 122, 28}, },
            {{45, 45, 55}, {46, 46, 155}, {48, 122, -24}, },
            {{45, 122, -24}, },
            {{45, 57, -24}, {58, 58, 156}, {65, 122, -18}, },
            {{45, 45, 55}, {46, 46, 157}, {48, 122, -24}, },
            {{45, 122, -24}, },
            {{45, 113, -34}, {114, 114, 158}, {115, 122, 28}, },
            {{45, 107, -33}, {108, 108, 159}, {109, 122, 28}, },
            {{45, 115, -69}, {116, 116, 160}, {117, 122, 28}, },
            {{45, 45, 55}, {46, 46, 161}, {48, 122, -24}, },
            {{45, 122, -24}, },
            {{45, 122, -24}, },
            {{0, 121, 90}, {122, 122, 162}, {123, 65535, 90}, },
            {{116, 116, 163}, },
            {},
            {{100, 100, 164}, {108, 108, 165}, },
            {{105, 105, 166}, {111, 111, 167}, },
            {{109, 109, 168}, },
            {{111, 111, 169}, },
            {{105, 105, 170}, },
            {{101, 101, 171}, },
            {{101, 101, 172}, },
            {{110, 110, 173}, },
            {{45, 45, 55}, {46, 46, 174}, {48, 122, -24}, },
            {{102, 102, 175}, {105, 105, 176}, {114, 114, 177}, },
            {{45, 57, -24}, {58, 58, 178}, {65, 122, -18}, },
            {{104, 104, 179}, },
            {{45, 45, 55}, {46, 46, 180}, {48, 122, -24}, },
            {{111, 111, 181}, },
            {},
            {},
            {{45, 45, 55}, {46, 46, 182}, {48, 122, -24}, },
            {{45, 45, 55}, {46, 46, 183}, {48, 90, -24}, {91, 91, 184}, {95, 122, -18}, },
            {{45, 45, 55}, {46, 46, 185}, {48, 122, -24}, },
            {{106, 106, 186}, },
            {{0, 121, 90}, {122, 122, 187}, {123, 65535, 90}, },
            {{73, 73, 188}, },
            {{100, 100, 189}, },
            {{105, 105, 190}, },
            {{108, 108, 191}, },
            {{99, 99, 192}, },
            {{112, 112, 193}, },
            {{105, 105, 194}, },
            {{118, 118, 195}, },
            {{109, 109, 196}, },
            {{116, 116, 197}, },
            {{102, 102, 198}, },
            {{106, 106, 199}, },
            {{114, 114, 200}, },
            {{109, 109, 201}, },
            {{101, 101, 202}, },
            {},
            {{101, 101, 203}, },
            {{106, 106, 204}, },
            {{117, 117, 205}, },
            {{106, 106, 206}, },
            {{99, 99, 207}, {118, 118, 208}, },
            {{48, 57, 209}, },
            {{111, 111, 210}, },
            {{111, 111, 211}, },
            {{0, 121, 90}, {122, 122, 212}, {123, 65535, 90}, },
            {{110, 110, 213}, },
            {},
            {{97, 97, 214}, },
            {{116, 116, 215}, },
            {{117, 117, 216}, },
            {{111, 111, 217}, },
            {{110, 110, 218}, },
            {{111, 111, 219}, },
            {{111, 111, 220}, },
            {},
            {{105, 105, 221}, },
            {{111, 111, 222}, },
            {{97, 97, 223}, },
            {{112, 112, 224}, },
            {{109, 109, 225}, },
            {{108, 108, 226}, },
            {{111, 111, 227}, },
            {{116, 116, 228}, },
            {{111, 111, 229}, },
            {{108, 108, 230}, {111, 111, 231}, },
            {{105, 105, 232}, },
            {{93, 93, 233}, },
            {{117, 117, 234}, },
            {{105, 105, 235}, },
            {{0, 122, -189}, {123, 124, 90}, {125, 125, 236}, {126, 65535, 90}, },
            {{112, 112, 237}, },
            {{115, 115, 238}, },
            {{101, 101, 239}, },
            {{115, 115, 240}, },
            {{114, 114, 241}, },
            {},
            {{116, 116, 242}, },
            {{118, 118, 243}, },
            {{108, 108, 244}, },
            {{105, 105, 245}, },
            {{109, 109, 246}, },
            {{111, 111, 247}, },
            {{111, 111, 248}, },
            {{112, 112, 249}, },
            {{105, 105, 250}, },
            {{101, 101, 251}, },
            {{105, 105, 252}, },
            {{111, 111, 253}, },
            {{109, 109, 254}, },
            {{122, 122, 255}, },
            {{46, 46, 183}, },
            {{116, 116, 256}, },
            {{110, 110, 257}, },
            {{0, 65535, -46}, },
            {{117, 117, 258}, },
            {},
            {{114, 114, 259}, },
            {},
            {{116, 116, 260}, },
            {},
            {{101, 101, 261}, },
            {{116, 116, 262}, },
            {{110, 110, 263}, },
            {{101, 101, 264}, },
            {{114, 114, 265}, },
            {{118, 118, 266}, },
            {},
            {{110, 110, 267}, },
            {{114, 114, 268}, },
            {{110, 110, 269}, },
            {{110, 110, 270}, },
            {{109, 109, 271}, },
            {},
            {{101, 101, 272}, },
            {},
            {{116, 116, 273}, },
            {},
            {},
            {},
            {{101, 101, 274}, },
            {},
            {},
            {{116, 116, 275}, },
            {{101, 101, 276}, },
            {},
            {{46, 46, 277}, },
            {},
            {{101, 101, 278}, },
            {{101, 101, 279}, },
            {{114, 114, 280}, },
            {{62, 62, 281}, },
            {{114, 114, 282}, },
            {},
            {},
            {{106, 106, 283}, },
            {},
            {{110, 110, 284}, },
            {{46, 46, 285}, },
            {{0, 59, 286}, {60, 60, 287}, {61, 65535, 286}, },
            {},
            {{111, 111, 288}, },
            {{116, 116, 289}, },
            {{106, 106, 290}, },
            {{0, 65535, -283}, },
            {{0, 60, -283}, {61, 100, 286}, {101, 101, 291}, {102, 65535, 286}, },
            {{105, 105, 292}, },
            {},
            {{111, 111, 293}, },
            {{0, 60, -283}, {61, 109, 286}, {110, 110, 294}, {111, 65535, 286}, },
            {{110, 110, 295}, },
            {{105, 105, 296}, },
            {{0, 60, -283}, {61, 99, 286}, {100, 100, 297}, {101, 65535, 286}, },
            {},
            {{110, 110, 298}, },
            {{0, 60, -283}, {61, 72, 286}, {73, 73, 299}, {74, 65535, 286}, },
            {},
            {{0, 109, -293}, {110, 110, 300}, {111, 65535, 286}, },
            {{0, 60, -283}, {61, 111, 286}, {112, 112, 301}, {113, 65535, 286}, },
            {{0, 60, -283}, {61, 116, 286}, {117, 117, 302}, {118, 65535, 286}, },
            {{0, 60, -283}, {61, 115, 286}, {116, 116, 303}, {117, 65535, 286}, },
            {{0, 60, -283}, {61, 61, 286}, {62, 62, 304}, {63, 65535, 286}, },
            {{0, 65535, -283}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {1, 37, 37, 37, -1, -1, 29, -1, 30, 31, 7, 5, 8, 1, 2, 9, 0, 4, 3, 11, 11, 11, 1, 32, -1, 33, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 34, 35, 37, 37, 11, -1, 1, 1, 1, 1, 1, 1, 11, -1, 11, 1, 40, -1, 1, 16, 1, 1, 1, 1, 1, 1, 1, 41, 1, 1, 14, 44, 1, 1, 1, 1, 1, 43, 1, 42, 1, 1, 17, 1, 1, 18, -1, -1, 54, 54, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 13, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, 27, 14, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, -1, 26, -1, 25, -1, 24, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, 55, -1, 48, -1, 20, 22, 19, -1, 48, 58, -1, -1, 48, -1, 48, -1, -1, -1, -1, -1, 49, 50, -1, 57, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, 48, -1, -1, 48, -1, -1, -1, -1, -1, 59, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
