/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.node;

import prerna.sablecc2.analysis.*;

@SuppressWarnings("nls")
public final class AFractionDecimal extends PFractionDecimal
{
    private PPosOrNeg _posOrNeg_;
    private TDot _dot_;
    private TNumber _fraction_;

    public AFractionDecimal()
    {
        // Constructor
    }

    public AFractionDecimal(
        @SuppressWarnings("hiding") PPosOrNeg _posOrNeg_,
        @SuppressWarnings("hiding") TDot _dot_,
        @SuppressWarnings("hiding") TNumber _fraction_)
    {
        // Constructor
        setPosOrNeg(_posOrNeg_);

        setDot(_dot_);

        setFraction(_fraction_);

    }

    @Override
    public Object clone()
    {
        return new AFractionDecimal(
            cloneNode(this._posOrNeg_),
            cloneNode(this._dot_),
            cloneNode(this._fraction_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFractionDecimal(this);
    }

    public PPosOrNeg getPosOrNeg()
    {
        return this._posOrNeg_;
    }

    public void setPosOrNeg(PPosOrNeg node)
    {
        if(this._posOrNeg_ != null)
        {
            this._posOrNeg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._posOrNeg_ = node;
    }

    public TDot getDot()
    {
        return this._dot_;
    }

    public void setDot(TDot node)
    {
        if(this._dot_ != null)
        {
            this._dot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dot_ = node;
    }

    public TNumber getFraction()
    {
        return this._fraction_;
    }

    public void setFraction(TNumber node)
    {
        if(this._fraction_ != null)
        {
            this._fraction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fraction_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._posOrNeg_)
            + toString(this._dot_)
            + toString(this._fraction_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._posOrNeg_ == child)
        {
            this._posOrNeg_ = null;
            return;
        }

        if(this._dot_ == child)
        {
            this._dot_ = null;
            return;
        }

        if(this._fraction_ == child)
        {
            this._fraction_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._posOrNeg_ == oldChild)
        {
            setPosOrNeg((PPosOrNeg) newChild);
            return;
        }

        if(this._dot_ == oldChild)
        {
            setDot((TDot) newChild);
            return;
        }

        if(this._fraction_ == oldChild)
        {
            setFraction((TNumber) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
