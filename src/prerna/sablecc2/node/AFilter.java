/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.node;

import prerna.sablecc2.analysis.*;

@SuppressWarnings("nls")
public final class AFilter extends PFilter
{
    private TLPar _lPar_;
    private PColDef _lcol_;
    private TComparator _comparator_;
    private PColDef _rcol_;
    private TRPar _rPar_;

    public AFilter()
    {
        // Constructor
    }

    public AFilter(
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") PColDef _lcol_,
        @SuppressWarnings("hiding") TComparator _comparator_,
        @SuppressWarnings("hiding") PColDef _rcol_,
        @SuppressWarnings("hiding") TRPar _rPar_)
    {
        // Constructor
        setLPar(_lPar_);

        setLcol(_lcol_);

        setComparator(_comparator_);

        setRcol(_rcol_);

        setRPar(_rPar_);

    }

    @Override
    public Object clone()
    {
        return new AFilter(
            cloneNode(this._lPar_),
            cloneNode(this._lcol_),
            cloneNode(this._comparator_),
            cloneNode(this._rcol_),
            cloneNode(this._rPar_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFilter(this);
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public PColDef getLcol()
    {
        return this._lcol_;
    }

    public void setLcol(PColDef node)
    {
        if(this._lcol_ != null)
        {
            this._lcol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lcol_ = node;
    }

    public TComparator getComparator()
    {
        return this._comparator_;
    }

    public void setComparator(TComparator node)
    {
        if(this._comparator_ != null)
        {
            this._comparator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comparator_ = node;
    }

    public PColDef getRcol()
    {
        return this._rcol_;
    }

    public void setRcol(PColDef node)
    {
        if(this._rcol_ != null)
        {
            this._rcol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rcol_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lPar_)
            + toString(this._lcol_)
            + toString(this._comparator_)
            + toString(this._rcol_)
            + toString(this._rPar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._lcol_ == child)
        {
            this._lcol_ = null;
            return;
        }

        if(this._comparator_ == child)
        {
            this._comparator_ = null;
            return;
        }

        if(this._rcol_ == child)
        {
            this._rcol_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._lcol_ == oldChild)
        {
            setLcol((PColDef) newChild);
            return;
        }

        if(this._comparator_ == oldChild)
        {
            setComparator((TComparator) newChild);
            return;
        }

        if(this._rcol_ == oldChild)
        {
            setRcol((PColDef) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
