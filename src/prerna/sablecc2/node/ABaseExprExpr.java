/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.node;

import prerna.sablecc2.analysis.Analysis;

@SuppressWarnings("nls")
public final class ABaseExprExpr extends PExpr
{
    private PBaseExpr _baseExpr_;

    public ABaseExprExpr()
    {
        // Constructor
    }

    public ABaseExprExpr(
        @SuppressWarnings("hiding") PBaseExpr _baseExpr_)
    {
        // Constructor
        setBaseExpr(_baseExpr_);

    }

    @Override
    public Object clone()
    {
        return new ABaseExprExpr(
            cloneNode(this._baseExpr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABaseExprExpr(this);
    }

    public PBaseExpr getBaseExpr()
    {
        return this._baseExpr_;
    }

    public void setBaseExpr(PBaseExpr node)
    {
        if(this._baseExpr_ != null)
        {
            this._baseExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._baseExpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._baseExpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._baseExpr_ == child)
        {
            this._baseExpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._baseExpr_ == oldChild)
        {
            setBaseExpr((PBaseExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
