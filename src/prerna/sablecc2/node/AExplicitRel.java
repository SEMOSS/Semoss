/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.node;

import prerna.sablecc2.analysis.Analysis;

@SuppressWarnings("nls")
public final class AExplicitRel extends PExplicitRel
{
    private TLPar _lPar_;
    private PColDef _lcol_;
    private TComma _comma1_;
    private TRelType _relType_;
    private TComma _comma2_;
    private PColDef _rcol_;
    private TComma _comma3_;
    private PColDef _relationshipName_;
    private TRPar _rPar_;

    public AExplicitRel()
    {
        // Constructor
    }

    public AExplicitRel(
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") PColDef _lcol_,
        @SuppressWarnings("hiding") TComma _comma1_,
        @SuppressWarnings("hiding") TRelType _relType_,
        @SuppressWarnings("hiding") TComma _comma2_,
        @SuppressWarnings("hiding") PColDef _rcol_,
        @SuppressWarnings("hiding") TComma _comma3_,
        @SuppressWarnings("hiding") PColDef _relationshipName_,
        @SuppressWarnings("hiding") TRPar _rPar_)
    {
        // Constructor
        setLPar(_lPar_);

        setLcol(_lcol_);

        setComma1(_comma1_);

        setRelType(_relType_);

        setComma2(_comma2_);

        setRcol(_rcol_);

        setComma3(_comma3_);

        setRelationshipName(_relationshipName_);

        setRPar(_rPar_);

    }

    @Override
    public Object clone()
    {
        return new AExplicitRel(
            cloneNode(this._lPar_),
            cloneNode(this._lcol_),
            cloneNode(this._comma1_),
            cloneNode(this._relType_),
            cloneNode(this._comma2_),
            cloneNode(this._rcol_),
            cloneNode(this._comma3_),
            cloneNode(this._relationshipName_),
            cloneNode(this._rPar_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExplicitRel(this);
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public PColDef getLcol()
    {
        return this._lcol_;
    }

    public void setLcol(PColDef node)
    {
        if(this._lcol_ != null)
        {
            this._lcol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lcol_ = node;
    }

    public TComma getComma1()
    {
        return this._comma1_;
    }

    public void setComma1(TComma node)
    {
        if(this._comma1_ != null)
        {
            this._comma1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma1_ = node;
    }

    public TRelType getRelType()
    {
        return this._relType_;
    }

    public void setRelType(TRelType node)
    {
        if(this._relType_ != null)
        {
            this._relType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relType_ = node;
    }

    public TComma getComma2()
    {
        return this._comma2_;
    }

    public void setComma2(TComma node)
    {
        if(this._comma2_ != null)
        {
            this._comma2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma2_ = node;
    }

    public PColDef getRcol()
    {
        return this._rcol_;
    }

    public void setRcol(PColDef node)
    {
        if(this._rcol_ != null)
        {
            this._rcol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rcol_ = node;
    }

    public TComma getComma3()
    {
        return this._comma3_;
    }

    public void setComma3(TComma node)
    {
        if(this._comma3_ != null)
        {
            this._comma3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma3_ = node;
    }

    public PColDef getRelationshipName()
    {
        return this._relationshipName_;
    }

    public void setRelationshipName(PColDef node)
    {
        if(this._relationshipName_ != null)
        {
            this._relationshipName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relationshipName_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lPar_)
            + toString(this._lcol_)
            + toString(this._comma1_)
            + toString(this._relType_)
            + toString(this._comma2_)
            + toString(this._rcol_)
            + toString(this._comma3_)
            + toString(this._relationshipName_)
            + toString(this._rPar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._lcol_ == child)
        {
            this._lcol_ = null;
            return;
        }

        if(this._comma1_ == child)
        {
            this._comma1_ = null;
            return;
        }

        if(this._relType_ == child)
        {
            this._relType_ = null;
            return;
        }

        if(this._comma2_ == child)
        {
            this._comma2_ = null;
            return;
        }

        if(this._rcol_ == child)
        {
            this._rcol_ = null;
            return;
        }

        if(this._comma3_ == child)
        {
            this._comma3_ = null;
            return;
        }

        if(this._relationshipName_ == child)
        {
            this._relationshipName_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._lcol_ == oldChild)
        {
            setLcol((PColDef) newChild);
            return;
        }

        if(this._comma1_ == oldChild)
        {
            setComma1((TComma) newChild);
            return;
        }

        if(this._relType_ == oldChild)
        {
            setRelType((TRelType) newChild);
            return;
        }

        if(this._comma2_ == oldChild)
        {
            setComma2((TComma) newChild);
            return;
        }

        if(this._rcol_ == oldChild)
        {
            setRcol((PColDef) newChild);
            return;
        }

        if(this._comma3_ == oldChild)
        {
            setComma3((TComma) newChild);
            return;
        }

        if(this._relationshipName_ == oldChild)
        {
            setRelationshipName((PColDef) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
