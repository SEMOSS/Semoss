/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.lexer;

import java.io.*;
import prerna.sablecc2.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMeta(line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPow(line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWord(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComparator(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqual(line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSelectorid(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOptionid(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProjectid(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPropid(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLabelid(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJoinid(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTooltipid(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrac(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrac(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCurl(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCurl(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameprefix(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameid(line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCodeAlpha(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJava(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TR(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAsOp(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCustom(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelType(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THelpToken(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{10, 10, 1}, {13, 13, 2}, {32, 32, 3}, {33, 33, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {46, 46, 14}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 63, 22}, {65, 69, 23}, {70, 70, 24}, {71, 76, 23}, {77, 77, 25}, {78, 83, 23}, {84, 84, 26}, {85, 90, 23}, {91, 91, 27}, {93, 93, 28}, {94, 94, 29}, {95, 95, 30}, {97, 98, 31}, {99, 99, 32}, {100, 101, 31}, {102, 102, 33}, {103, 104, 31}, {105, 105, 34}, {106, 106, 35}, {107, 107, 31}, {108, 108, 36}, {109, 110, 31}, {111, 111, 37}, {112, 112, 38}, {113, 113, 31}, {114, 114, 39}, {115, 115, 40}, {116, 116, 41}, {117, 122, 31}, {123, 123, 42}, {124, 124, 43}, {125, 125, 44}, },
            {},
            {},
            {},
            {{61, 61, 45}, },
            {{0, 33, 46}, {34, 34, 47}, {35, 91, 46}, {92, 92, 48}, {93, 65535, 46}, },
            {},
            {{0, 38, 49}, {39, 39, 50}, {40, 65535, 49}, },
            {},
            {},
            {},
            {},
            {},
            {{45, 45, 51}, },
            {{97, 97, 52}, {111, 111, 53}, },
            {},
            {{48, 57, 16}, {65, 90, 23}, {95, 95, 30}, {97, 122, 31}, },
            {},
            {},
            {{61, 61, 54}, {62, 62, 55}, {99, 99, 56}, {106, 106, 57}, },
            {{61, 61, 58}, },
            {{61, 61, 59}, },
            {{108, 108, 60}, },
            {{48, 57, 61}, {65, 122, -18}, },
            {{48, 57, 61}, {65, 65, 62}, {66, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 68, 23}, {69, 69, 63}, {70, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 81, 23}, {82, 82, 64}, {83, 90, 23}, {95, 122, -18}, },
            {},
            {},
            {},
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 113, 31}, {114, 114, 65}, {115, 122, 31}, },
            {{36, 36, 66}, {46, 46, 67}, {48, 95, -25}, {97, 97, 68}, {98, 122, 31}, },
            {{48, 95, -25}, {97, 101, 31}, {102, 102, 69}, {103, 109, 31}, {110, 110, 70}, {111, 122, 31}, },
            {{48, 57, 61}, {61, 61, 71}, {65, 122, -18}, },
            {{48, 57, 61}, {61, 61, 72}, {65, 95, -18}, {97, 100, 31}, {101, 101, 73}, {102, 122, 31}, },
            {{48, 57, 61}, {61, 61, 74}, {65, 95, -18}, {97, 116, 31}, {117, 117, 75}, {118, 122, 31}, },
            {{48, 57, 61}, {61, 61, 76}, {65, 113, -34}, {114, 114, 77}, {115, 122, 31}, },
            {{48, 95, -25}, {97, 104, 31}, {105, 105, 78}, {106, 122, 31}, },
            {{48, 57, 61}, {61, 61, 79}, {65, 100, -38}, {101, 101, 80}, {102, 122, 31}, },
            {{48, 57, 61}, {61, 61, 81}, {65, 113, -34}, {114, 114, 82}, {115, 122, 31}, },
            {},
            {},
            {},
            {},
            {{0, 65535, -7}, },
            {},
            {{0, 33, 46}, {34, 34, 83}, {35, 65535, -7}, },
            {{0, 65535, -9}, },
            {},
            {{32, 32, 84}, {104, 104, 85}, },
            {{115, 115, 86}, },
            {{117, 117, 87}, },
            {},
            {},
            {{62, 62, 88}, },
            {{62, 62, 89}, },
            {},
            {},
            {{105, 105, 90}, },
            {{48, 122, -25}, },
            {{48, 57, 61}, {65, 75, 23}, {76, 76, 91}, {77, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 83, 23}, {84, 84, 92}, {85, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 84, 23}, {85, 85, 93}, {86, 90, 23}, {95, 122, -18}, },
            {{48, 95, -25}, {97, 110, 31}, {111, 111, 94}, {112, 122, 31}, },
            {},
            {},
            {{48, 95, -25}, {97, 107, 31}, {108, 108, 95}, {109, 122, 31}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 109, 31}, {110, 110, 96}, {111, 122, 31}, },
            {},
            {},
            {{48, 101, -36}, {102, 102, 97}, {103, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 115, 31}, {116, 116, 98}, {117, 122, 31}, },
            {},
            {{48, 110, -67}, {111, 111, 99}, {112, 122, 31}, },
            {{48, 95, -25}, {97, 102, 31}, {103, 103, 100}, {104, 122, 31}, },
            {},
            {{48, 107, -70}, {108, 108, 101}, {109, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 116, 31}, {117, 117, 102}, {118, 122, 31}, },
            {{0, 65535, -7}, },
            {{104, 104, 103}, },
            {{101, 101, 104}, },
            {},
            {{116, 116, 105}, },
            {{33, 33, 106}, {37, 37, 107}, {39, 39, 108}, {40, 40, 109}, {41, 41, 110}, {42, 42, 111}, {43, 43, 112}, {45, 45, 113}, {46, 46, 114}, {48, 57, 115}, {60, 60, 116}, {65, 90, 117}, {95, 95, 118}, {97, 122, 119}, {126, 126, 120}, },
            {{32, 32, 121}, {33, 33, 122}, {37, 37, 123}, {39, 39, 124}, {40, 40, 125}, {41, 41, 126}, {42, 42, 127}, {43, 43, 128}, {45, 45, 129}, {46, 46, 130}, {48, 57, 131}, {60, 60, 132}, {65, 90, 133}, {95, 95, 134}, {97, 122, 135}, {126, 126, 136}, },
            {{107, 107, 137}, },
            {{48, 57, 61}, {65, 82, 23}, {83, 83, 138}, {84, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 65, 139}, {66, 122, -26}, },
            {{48, 68, -27}, {69, 69, 140}, {70, 122, -27}, },
            {{48, 95, -25}, {97, 114, 31}, {115, 115, 141}, {116, 122, 31}, },
            {{48, 114, -96}, {115, 115, 142}, {116, 122, 31}, },
            {{48, 95, -25}, {97, 100, 31}, {101, 101, 143}, {102, 122, 31}, },
            {{48, 115, -77}, {116, 116, 144}, {117, 122, 31}, },
            {{48, 100, -98}, {101, 101, 145}, {102, 122, 31}, },
            {{48, 95, -25}, {97, 111, 31}, {112, 112, 146}, {113, 122, 31}, },
            {{48, 95, -25}, {97, 103, 31}, {104, 104, 147}, {105, 122, 31}, },
            {{48, 101, -36}, {102, 102, 148}, {103, 122, 31}, },
            {{48, 100, -98}, {101, 101, 149}, {102, 122, 31}, },
            {{101, 101, 150}, },
            {{108, 108, 151}, },
            {},
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{47, 47, 152}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{33, 126, -90}, },
            {{114, 114, 153}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{47, 47, 154}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{33, 126, -91}, },
            {{101, 101, 155}, },
            {{48, 68, -27}, {69, 69, 156}, {70, 122, -27}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 114, -96}, {115, 115, 157}, {116, 122, 31}, },
            {{48, 100, -98}, {101, 101, 158}, {102, 122, 31}, },
            {{48, 113, -34}, {114, 114, 159}, {115, 122, 31}, },
            {{46, 46, 160}, {48, 122, -25}, },
            {{48, 113, -34}, {114, 114, 161}, {115, 122, 31}, },
            {{48, 114, -96}, {115, 115, 162}, {116, 122, 31}, },
            {{48, 115, -77}, {116, 116, 163}, {117, 122, 31}, },
            {{46, 46, 164}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{108, 108, 165}, },
            {{112, 112, 166}, },
            {{99, 99, 167}, },
            {{117, 117, 168}, },
            {{106, 106, 169}, },
            {},
            {{48, 122, -25}, },
            {{46, 46, 170}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{46, 46, 171}, {48, 122, -25}, },
            {{111, 111, 172}, },
            {{46, 46, 173}, {48, 122, -25}, },
            {{48, 57, 61}, {61, 61, 174}, {65, 122, -18}, },
            {{46, 46, 175}, {48, 122, -25}, },
            {{106, 106, 176}, },
            {{112, 112, 177}, },
            {},
            {{62, 62, 178}, },
            {{110, 110, 179}, },
            {{62, 62, 180}, },
            {{106, 106, 181}, },
            {{106, 106, 182}, },
            {{117, 117, 183}, },
            {{106, 106, 184}, },
            {},
            {{111, 111, 185}, },
            {{111, 111, 186}, },
            {},
            {},
            {{82, 82, 187}, },
            {},
            {{111, 111, 188}, },
            {{111, 111, 189}, },
            {{116, 116, 190}, },
            {{111, 111, 191}, },
            {{117, 117, 192}, },
            {{105, 105, 193}, },
            {{40, 40, 194}, },
            {{105, 105, 195}, },
            {{105, 105, 196}, },
            {{101, 101, 197}, },
            {{105, 105, 198}, },
            {{116, 116, 199}, },
            {{110, 110, 200}, },
            {{33, 33, 201}, {37, 37, 202}, {39, 39, 203}, {40, 40, 204}, {41, 41, 205}, {42, 42, 206}, {43, 43, 207}, {45, 45, 208}, {46, 46, 209}, {48, 57, 210}, {65, 90, 211}, {95, 95, 212}, {97, 122, 213}, {126, 126, 214}, },
            {{110, 110, 215}, },
            {{110, 110, 216}, },
            {{114, 114, 217}, },
            {{110, 110, 218}, },
            {{101, 101, 219}, },
            {},
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 57, -196}, {60, 60, 220}, {65, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {{33, 126, -196}, },
            {},
            {},
            {{46, 46, 221}, },
            {},
            {{114, 114, 222}, },
            {{47, 47, 223}, },
            {{106, 106, 224}, },
            {{46, 46, 225}, },
            {{106, 106, 226}, },
            {{111, 111, 227}, },
            {{106, 106, 228}, },
            {{62, 62, 229}, },
            {{105, 105, 230}, },
            {{111, 111, 231}, },
            {},
            {{110, 110, 232}, },
            {{105, 105, 233}, },
            {},
            {{110, 110, 234}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {3, 32, 32, 32, -1, -1, 9, -1, 24, 25, 12, 7, 13, 8, 4, 14, 1, 6, 5, 15, 16, 15, -1, 3, 3, 3, 3, 26, 27, 10, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 28, 38, 29, 15, -1, 11, -1, -1, 11, -1, -1, -1, 15, 15, -1, -1, 15, 15, -1, 3, 3, 3, 3, 3, 30, 31, 3, 3, 3, 22, 21, 3, 18, 3, 19, 3, 3, 17, 3, 23, 3, 11, -1, -1, 37, -1, -1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, -1, -1, -1, -1, -1, 15, 2, 3, 2, 3, -1, 3, 3, 3, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, 40, 33, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, 39, -1, 39, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
