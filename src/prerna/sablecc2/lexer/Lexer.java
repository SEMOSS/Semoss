/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.lexer;

import java.io.*;
import prerna.sablecc2.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMeta(line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPow(line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWord(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComparator(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAndComparator(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOrComparator(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqual(line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSelectorid(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOptionid(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProjectid(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPropid(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLabelid(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJoinid(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTooltipid(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrac(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrac(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCurl(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCurl(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameprefix(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameid(line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCodeAlpha(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJava(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TR(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAsOp(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCustom(line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelType(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THelpToken(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{10, 10, 1}, {13, 13, 2}, {32, 32, 3}, {33, 33, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {46, 46, 14}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 63, 22}, {65, 69, 23}, {70, 70, 24}, {71, 76, 23}, {77, 77, 25}, {78, 83, 23}, {84, 84, 26}, {85, 90, 23}, {91, 91, 27}, {93, 93, 28}, {94, 94, 29}, {95, 95, 30}, {97, 98, 31}, {99, 99, 32}, {100, 101, 31}, {102, 102, 33}, {103, 104, 31}, {105, 105, 34}, {106, 106, 35}, {107, 107, 31}, {108, 108, 36}, {109, 110, 31}, {111, 111, 37}, {112, 112, 38}, {113, 113, 31}, {114, 114, 39}, {115, 115, 40}, {116, 116, 41}, {117, 122, 31}, {123, 123, 42}, {124, 124, 43}, {125, 125, 44}, },
            {},
            {},
            {{65, 65, 45}, {79, 79, 46}, },
            {{61, 61, 47}, },
            {{0, 33, 48}, {34, 34, 49}, {35, 91, 48}, {92, 92, 50}, {93, 65535, 48}, },
            {},
            {{0, 38, 51}, {39, 39, 52}, {40, 65535, 51}, },
            {},
            {},
            {},
            {},
            {},
            {{45, 45, 53}, },
            {{97, 97, 54}, {111, 111, 55}, },
            {},
            {{48, 57, 16}, {65, 90, 23}, {95, 95, 30}, {97, 122, 31}, },
            {},
            {},
            {{61, 61, 56}, {62, 62, 57}, {99, 99, 58}, {106, 106, 59}, },
            {{61, 61, 60}, },
            {{61, 61, 61}, },
            {{108, 108, 62}, },
            {{48, 57, 63}, {65, 122, -18}, },
            {{48, 57, 63}, {65, 65, 64}, {66, 90, 23}, {95, 122, -18}, },
            {{48, 57, 63}, {65, 68, 23}, {69, 69, 65}, {70, 90, 23}, {95, 122, -18}, },
            {{48, 57, 63}, {65, 81, 23}, {82, 82, 66}, {83, 90, 23}, {95, 122, -18}, },
            {},
            {},
            {},
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 113, 31}, {114, 114, 67}, {115, 122, 31}, },
            {{36, 36, 68}, {46, 46, 69}, {48, 95, -25}, {97, 97, 70}, {98, 122, 31}, },
            {{48, 95, -25}, {97, 101, 31}, {102, 102, 71}, {103, 109, 31}, {110, 110, 72}, {111, 122, 31}, },
            {{48, 57, 63}, {61, 61, 73}, {65, 122, -18}, },
            {{48, 57, 63}, {61, 61, 74}, {65, 95, -18}, {97, 100, 31}, {101, 101, 75}, {102, 122, 31}, },
            {{48, 57, 63}, {61, 61, 76}, {65, 95, -18}, {97, 116, 31}, {117, 117, 77}, {118, 122, 31}, },
            {{48, 57, 63}, {61, 61, 78}, {65, 113, -34}, {114, 114, 79}, {115, 122, 31}, },
            {{48, 95, -25}, {97, 104, 31}, {105, 105, 80}, {106, 122, 31}, },
            {{48, 57, 63}, {61, 61, 81}, {65, 100, -38}, {101, 101, 82}, {102, 122, 31}, },
            {{48, 57, 63}, {61, 61, 83}, {65, 113, -34}, {114, 114, 84}, {115, 122, 31}, },
            {},
            {},
            {},
            {{78, 78, 85}, },
            {{82, 82, 86}, },
            {},
            {{0, 65535, -7}, },
            {},
            {{0, 33, 48}, {34, 34, 87}, {35, 65535, -7}, },
            {{0, 65535, -9}, },
            {},
            {{32, 32, 88}, {104, 104, 89}, },
            {{115, 115, 90}, },
            {{117, 117, 91}, },
            {},
            {},
            {{62, 62, 92}, },
            {{62, 62, 93}, },
            {},
            {},
            {{105, 105, 94}, },
            {{48, 122, -25}, },
            {{48, 57, 63}, {65, 75, 23}, {76, 76, 95}, {77, 90, 23}, {95, 122, -18}, },
            {{48, 57, 63}, {65, 83, 23}, {84, 84, 96}, {85, 90, 23}, {95, 122, -18}, },
            {{48, 57, 63}, {65, 84, 23}, {85, 85, 97}, {86, 90, 23}, {95, 122, -18}, },
            {{48, 95, -25}, {97, 110, 31}, {111, 111, 98}, {112, 122, 31}, },
            {},
            {},
            {{48, 95, -25}, {97, 107, 31}, {108, 108, 99}, {109, 122, 31}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 109, 31}, {110, 110, 100}, {111, 122, 31}, },
            {},
            {},
            {{48, 101, -36}, {102, 102, 101}, {103, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 115, 31}, {116, 116, 102}, {117, 122, 31}, },
            {},
            {{48, 110, -69}, {111, 111, 103}, {112, 122, 31}, },
            {{48, 95, -25}, {97, 102, 31}, {103, 103, 104}, {104, 122, 31}, },
            {},
            {{48, 107, -72}, {108, 108, 105}, {109, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 116, 31}, {117, 117, 106}, {118, 122, 31}, },
            {{68, 68, 107}, },
            {{32, 32, 108}, },
            {{0, 65535, -7}, },
            {{104, 104, 109}, },
            {{101, 101, 110}, },
            {},
            {{116, 116, 111}, },
            {{33, 33, 112}, {37, 37, 113}, {39, 39, 114}, {40, 40, 115}, {41, 41, 116}, {42, 42, 117}, {43, 43, 118}, {45, 45, 119}, {46, 46, 120}, {48, 57, 121}, {60, 60, 122}, {65, 90, 123}, {95, 95, 124}, {97, 122, 125}, {126, 126, 126}, },
            {{32, 32, 127}, {33, 33, 128}, {37, 37, 129}, {39, 39, 130}, {40, 40, 131}, {41, 41, 132}, {42, 42, 133}, {43, 43, 134}, {45, 45, 135}, {46, 46, 136}, {48, 57, 137}, {60, 60, 138}, {65, 90, 139}, {95, 95, 140}, {97, 122, 141}, {126, 126, 142}, },
            {{107, 107, 143}, },
            {{48, 57, 63}, {65, 82, 23}, {83, 83, 144}, {84, 90, 23}, {95, 122, -18}, },
            {{48, 57, 63}, {65, 65, 145}, {66, 122, -26}, },
            {{48, 68, -27}, {69, 69, 146}, {70, 122, -27}, },
            {{48, 95, -25}, {97, 114, 31}, {115, 115, 147}, {116, 122, 31}, },
            {{48, 114, -100}, {115, 115, 148}, {116, 122, 31}, },
            {{48, 95, -25}, {97, 100, 31}, {101, 101, 149}, {102, 122, 31}, },
            {{48, 115, -79}, {116, 116, 150}, {117, 122, 31}, },
            {{48, 100, -102}, {101, 101, 151}, {102, 122, 31}, },
            {{48, 95, -25}, {97, 111, 31}, {112, 112, 152}, {113, 122, 31}, },
            {{48, 95, -25}, {97, 103, 31}, {104, 104, 153}, {105, 122, 31}, },
            {{48, 101, -36}, {102, 102, 154}, {103, 122, 31}, },
            {{48, 100, -102}, {101, 101, 155}, {102, 122, 31}, },
            {{32, 32, 156}, },
            {},
            {{101, 101, 157}, },
            {{108, 108, 158}, },
            {},
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{47, 47, 159}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{33, 126, -94}, },
            {{114, 114, 160}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{47, 47, 161}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{33, 126, -95}, },
            {{101, 101, 162}, },
            {{48, 68, -27}, {69, 69, 163}, {70, 122, -27}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 114, -100}, {115, 115, 164}, {116, 122, 31}, },
            {{48, 100, -102}, {101, 101, 165}, {102, 122, 31}, },
            {{48, 113, -34}, {114, 114, 166}, {115, 122, 31}, },
            {{46, 46, 167}, {48, 122, -25}, },
            {{48, 113, -34}, {114, 114, 168}, {115, 122, 31}, },
            {{48, 114, -100}, {115, 115, 169}, {116, 122, 31}, },
            {{48, 115, -79}, {116, 116, 170}, {117, 122, 31}, },
            {{46, 46, 171}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {},
            {{108, 108, 172}, },
            {{112, 112, 173}, },
            {{99, 99, 174}, },
            {{117, 117, 175}, },
            {{106, 106, 176}, },
            {},
            {{48, 122, -25}, },
            {{46, 46, 177}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{46, 46, 178}, {48, 122, -25}, },
            {{111, 111, 179}, },
            {{46, 46, 180}, {48, 122, -25}, },
            {{48, 57, 63}, {61, 61, 181}, {65, 122, -18}, },
            {{46, 46, 182}, {48, 122, -25}, },
            {{106, 106, 183}, },
            {{112, 112, 184}, },
            {},
            {{62, 62, 185}, },
            {{110, 110, 186}, },
            {{62, 62, 187}, },
            {{106, 106, 188}, },
            {{106, 106, 189}, },
            {{117, 117, 190}, },
            {{106, 106, 191}, },
            {},
            {{111, 111, 192}, },
            {{111, 111, 193}, },
            {},
            {},
            {{82, 82, 194}, },
            {},
            {{111, 111, 195}, },
            {{111, 111, 196}, },
            {{116, 116, 197}, },
            {{111, 111, 198}, },
            {{117, 117, 199}, },
            {{105, 105, 200}, },
            {{40, 40, 201}, },
            {{105, 105, 202}, },
            {{105, 105, 203}, },
            {{101, 101, 204}, },
            {{105, 105, 205}, },
            {{116, 116, 206}, },
            {{110, 110, 207}, },
            {{33, 33, 208}, {37, 37, 209}, {39, 39, 210}, {40, 40, 211}, {41, 41, 212}, {42, 42, 213}, {43, 43, 214}, {45, 45, 215}, {46, 46, 216}, {48, 57, 217}, {65, 90, 218}, {95, 95, 219}, {97, 122, 220}, {126, 126, 221}, },
            {{110, 110, 222}, },
            {{110, 110, 223}, },
            {{114, 114, 224}, },
            {{110, 110, 225}, },
            {{101, 101, 226}, },
            {},
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 57, -203}, {60, 60, 227}, {65, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {{33, 126, -203}, },
            {},
            {},
            {{46, 46, 228}, },
            {},
            {{114, 114, 229}, },
            {{47, 47, 230}, },
            {{106, 106, 231}, },
            {{46, 46, 232}, },
            {{106, 106, 233}, },
            {{111, 111, 234}, },
            {{106, 106, 235}, },
            {{62, 62, 236}, },
            {{105, 105, 237}, },
            {{111, 111, 238}, },
            {},
            {{110, 110, 239}, },
            {{105, 105, 240}, },
            {},
            {{110, 110, 241}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {3, 34, 34, 34, -1, -1, 9, -1, 26, 27, 12, 7, 13, 8, 4, 14, 1, 6, 5, 15, 18, 15, -1, 3, 3, 3, 3, 28, 29, 10, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 30, 40, 31, -1, -1, 15, -1, 11, -1, -1, 11, -1, -1, -1, 15, 15, -1, -1, 15, 15, -1, 3, 3, 3, 3, 3, 32, 33, 3, 3, 3, 24, 23, 3, 20, 3, 21, 3, 3, 19, 3, 25, 3, -1, -1, 11, -1, -1, 39, -1, -1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, -1, 17, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 16, -1, -1, -1, -1, -1, 15, 2, 3, 2, 3, -1, 3, 3, 3, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, 42, 35, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 41, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, 41, -1, 41, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
