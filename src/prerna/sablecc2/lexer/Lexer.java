/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.lexer;

import java.io.*;
import prerna.sablecc2.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSort(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQuote(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWord(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComparator(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVizType(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLogOperator(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqual(line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSelectorid(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGroupid(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOptionid(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProjectid(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLabelid(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJoinid(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTooltipid(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameid(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrac(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrac(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameprefix(line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColprefix(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKey(line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOptionKey(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTolookup(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TApi(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOutput(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImportblock(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCodeblock(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJava(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TR(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMk(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMv(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAsOp(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMap(line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFtype(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameVerbs(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCustom(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{10, 10, 1}, {13, 13, 2}, {32, 32, 3}, {33, 33, 4}, {34, 34, 5}, {37, 37, 6}, {38, 38, 7}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {63, 63, 23}, {65, 69, 24}, {70, 70, 25}, {71, 71, 26}, {72, 81, 24}, {82, 82, 27}, {83, 83, 24}, {84, 84, 28}, {85, 90, 24}, {91, 91, 29}, {93, 93, 30}, {95, 95, 31}, {97, 97, 32}, {98, 98, 33}, {99, 99, 34}, {100, 100, 35}, {101, 101, 36}, {102, 102, 37}, {103, 103, 38}, {104, 104, 39}, {105, 105, 33}, {106, 106, 40}, {107, 107, 41}, {108, 108, 42}, {109, 109, 43}, {110, 110, 33}, {111, 111, 44}, {112, 112, 45}, {113, 113, 33}, {114, 114, 46}, {115, 115, 47}, {116, 116, 48}, {117, 117, 49}, {118, 118, 50}, {119, 119, 33}, {120, 120, 51}, {121, 121, 52}, {122, 122, 53}, {124, 124, 54}, {126, 126, 55}, },
            {},
            {},
            {},
            {{61, 61, 56}, },
            {{0, 33, 57}, {35, 38, 57}, {40, 65535, 57}, },
            {},
            {{38, 38, 58}, },
            {{0, 65535, -7}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{97, 97, 59}, },
            {},
            {{48, 57, 17}, {65, 90, 24}, {95, 95, 31}, {97, 122, 33}, },
            {},
            {},
            {{61, 61, 60}, {99, 99, 61}, {105, 105, 62}, {106, 106, 63}, },
            {{61, 61, 64}, },
            {{61, 61, 65}, },
            {{108, 108, 66}, },
            {{48, 57, 67}, {65, 122, -19}, },
            {{48, 57, 67}, {65, 65, 68}, {66, 90, 24}, {95, 122, -19}, },
            {{48, 95, -26}, {97, 113, 33}, {114, 114, 69}, {115, 122, 33}, },
            {{48, 57, 67}, {65, 83, 24}, {84, 84, 70}, {85, 90, 24}, {95, 122, -19}, },
            {{48, 57, 67}, {65, 81, 24}, {82, 82, 71}, {83, 90, 24}, {95, 122, -19}, },
            {},
            {},
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 99, 33}, {100, 100, 72}, {101, 107, 33}, {108, 108, 73}, {109, 111, 33}, {112, 112, 74}, {113, 114, 33}, {115, 115, 75}, {116, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 57, 67}, {58, 58, 76}, {65, 95, -19}, {97, 107, 33}, {108, 108, 77}, {109, 110, 33}, {111, 111, 78}, {112, 122, 33}, },
            {{48, 95, -26}, {97, 104, 33}, {105, 105, 79}, {106, 110, 33}, {111, 111, 80}, {112, 114, 33}, {115, 115, 81}, {116, 122, 33}, },
            {{48, 95, -26}, {97, 109, 33}, {110, 110, 82}, {111, 122, 33}, },
            {{36, 36, 83}, {48, 95, -26}, {97, 97, 84}, {98, 122, 33}, },
            {{48, 57, 67}, {61, 61, 85}, {65, 113, -28}, {114, 114, 86}, {115, 122, 33}, },
            {{48, 95, -26}, {97, 100, 33}, {101, 101, 87}, {102, 122, 33}, },
            {{48, 57, 67}, {61, 61, 88}, {65, 122, -19}, },
            {{48, 100, -41}, {101, 101, 89}, {102, 122, 33}, },
            {{48, 57, 67}, {61, 61, 90}, {65, 95, -19}, {97, 97, 91}, {98, 110, 33}, {111, 111, 92}, {112, 122, 33}, },
            {{48, 95, -26}, {97, 97, 93}, {98, 106, 33}, {107, 107, 94}, {108, 117, 33}, {118, 118, 95}, {119, 122, 33}, },
            {{48, 95, -26}, {97, 116, 33}, {117, 117, 96}, {118, 122, 33}, },
            {{48, 57, 67}, {61, 61, 97}, {65, 100, -41}, {101, 101, 98}, {102, 113, 33}, {114, 114, 99}, {115, 122, 33}, },
            {{48, 100, -41}, {101, 101, 100}, {102, 122, 33}, },
            {{48, 57, 67}, {61, 61, 101}, {65, 100, -41}, {101, 101, 102}, {102, 104, 33}, {105, 105, 103}, {106, 110, 33}, {111, 111, 104}, {112, 115, 33}, {116, 116, 105}, {117, 122, 33}, },
            {{48, 57, 67}, {61, 61, 106}, {65, 95, -19}, {97, 110, 33}, {111, 111, 107}, {112, 113, 33}, {114, 114, 108}, {115, 122, 33}, },
            {{48, 95, -26}, {97, 111, 33}, {112, 112, 109}, {113, 122, 33}, },
            {{48, 95, -26}, {97, 97, 110}, {98, 122, 33}, },
            {{48, 57, 67}, {61, 61, 111}, {65, 122, -19}, },
            {{48, 57, 67}, {61, 61, 112}, {65, 122, -19}, },
            {{48, 57, 67}, {61, 61, 113}, {65, 122, -19}, },
            {{124, 124, 114}, },
            {},
            {},
            {{0, 33, 57}, {34, 34, 115}, {35, 38, 57}, {39, 39, 116}, {40, 65535, 57}, },
            {},
            {{115, 115, 117}, },
            {},
            {{62, 62, 118}, },
            {{62, 62, 119}, },
            {{62, 62, 120}, },
            {},
            {},
            {{105, 105, 121}, },
            {{48, 122, -26}, },
            {{48, 57, 67}, {65, 75, 24}, {76, 76, 122}, {77, 90, 24}, {95, 122, -19}, },
            {{48, 95, -26}, {97, 97, 123}, {98, 104, 33}, {105, 105, 124}, {106, 122, 33}, },
            {{48, 95, -26}, {97, 97, 125}, {98, 122, 33}, },
            {{48, 57, 67}, {65, 84, 24}, {85, 85, 126}, {86, 90, 24}, {95, 122, -19}, },
            {{48, 99, -34}, {100, 100, 127}, {101, 122, 33}, },
            {{48, 104, -37}, {105, 105, 128}, {106, 122, 33}, },
            {{48, 104, -37}, {105, 105, 129}, {106, 122, 33}, },
            {{48, 95, -26}, {97, 98, 33}, {99, 99, 130}, {100, 122, 33}, },
            {},
            {{48, 116, -46}, {117, 117, 131}, {118, 122, 33}, },
            {{48, 95, -26}, {97, 107, 33}, {108, 108, 132}, {109, 122, 33}, },
            {{48, 95, -26}, {97, 108, 33}, {109, 109, 133}, {110, 122, 33}, },
            {{48, 95, -26}, {97, 118, 33}, {119, 119, 134}, {120, 122, 33}, },
            {{48, 98, -77}, {99, 99, 135}, {100, 122, 33}, },
            {{48, 99, -34}, {100, 100, 136}, {101, 122, 33}, },
            {},
            {{48, 107, -80}, {108, 108, 137}, {109, 122, 33}, },
            {},
            {{48, 95, -26}, {97, 110, 33}, {111, 111, 138}, {112, 122, 33}, },
            {{48, 95, -26}, {97, 97, 139}, {98, 122, 33}, },
            {},
            {{48, 95, -26}, {97, 120, 33}, {121, 121, 140}, {122, 122, 33}, },
            {},
            {{48, 95, -26}, {97, 97, 33}, {98, 98, 141}, {99, 115, 33}, {116, 116, 142}, {117, 122, 33}, },
            {{48, 109, -38}, {110, 110, 143}, {111, 122, 33}, },
            {{48, 111, -51}, {112, 112, 144}, {113, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 115, 33}, {116, 116, 145}, {117, 122, 33}, },
            {},
            {{48, 113, -28}, {114, 114, 146}, {115, 122, 33}, },
            {{48, 100, -41}, {101, 101, 147}, {102, 122, 33}, },
            {{48, 108, -81}, {109, 109, 148}, {110, 110, 149}, {111, 111, 33}, {112, 112, 150}, {113, 122, 33}, },
            {},
            {{48, 111, -51}, {112, 112, 151}, {113, 113, 33}, {114, 114, 152}, {115, 122, 33}, },
            {{48, 95, -26}, {97, 121, 33}, {122, 122, 153}, },
            {{48, 113, -28}, {114, 114, 154}, {115, 122, 33}, },
            {{48, 95, -26}, {97, 97, 155}, {98, 122, 33}, },
            {},
            {{48, 75, -70}, {76, 76, 156}, {77, 95, -70}, {97, 110, 33}, {111, 111, 157}, {112, 122, 33}, },
            {{48, 116, -46}, {117, 117, 158}, {118, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 107, -80}, {108, 108, 159}, {109, 122, 33}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{0, 59, 160}, {60, 60, 161}, {61, 65535, 160}, },
            {{0, 59, 162}, {60, 60, 163}, {61, 65535, 162}, },
            {{0, 31, 164}, {32, 32, 165}, {33, 59, 164}, {60, 60, 166}, {61, 65535, 164}, },
            {{107, 107, 167}, },
            {{48, 57, 67}, {65, 82, 24}, {83, 83, 168}, {84, 90, 24}, {95, 122, -19}, },
            {{48, 111, -51}, {112, 112, 169}, {113, 122, 33}, },
            {{48, 99, -34}, {100, 100, 170}, {101, 122, 33}, },
            {{48, 97, -93}, {98, 98, 171}, {99, 122, 33}, },
            {{48, 57, 67}, {65, 68, 24}, {69, 69, 172}, {70, 90, 24}, {95, 122, -19}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 97, 173}, {98, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 95, -26}, {97, 114, 33}, {115, 115, 174}, {116, 122, 33}, },
            {{48, 110, -88}, {111, 111, 175}, {112, 122, 33}, },
            {{48, 100, -41}, {101, 101, 176}, {102, 122, 33}, },
            {{48, 109, -38}, {110, 110, 177}, {111, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 57, 67}, {61, 61, 178}, {65, 122, -19}, },
            {{48, 114, -133}, {115, 115, 179}, {116, 122, 33}, },
            {{48, 116, -46}, {117, 117, 180}, {118, 122, 33}, },
            {{48, 115, -98}, {116, 116, 181}, {117, 122, 33}, },
            {{48, 57, 67}, {61, 61, 182}, {65, 122, -19}, },
            {{48, 100, -41}, {101, 101, 183}, {102, 122, 33}, },
            {{48, 104, -37}, {105, 105, 184}, {106, 122, 33}, },
            {{48, 95, -26}, {97, 102, 33}, {103, 103, 185}, {104, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 111, -51}, {112, 112, 186}, {113, 122, 33}, },
            {{48, 114, -133}, {115, 115, 187}, {116, 122, 33}, },
            {{48, 95, -26}, {97, 101, 33}, {102, 102, 188}, {103, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 107, -80}, {108, 108, 189}, {109, 122, 33}, },
            {{48, 95, -26}, {97, 97, 190}, {98, 122, 33}, },
            {{48, 104, -37}, {105, 105, 191}, {106, 122, 33}, },
            {{48, 100, -41}, {101, 101, 192}, {102, 122, 33}, },
            {{48, 115, -98}, {116, 116, 193}, {117, 122, 33}, },
            {{48, 113, -28}, {114, 114, 194}, {115, 122, 33}, },
            {{48, 110, -88}, {111, 111, 195}, {112, 122, 33}, },
            {{48, 107, -80}, {108, 108, 196}, {109, 122, 33}, },
            {{48, 100, -41}, {101, 101, 197}, {102, 122, 33}, },
            {{48, 116, -46}, {117, 117, 198}, {118, 122, 33}, },
            {{0, 65535, -120}, },
            {{0, 60, -120}, {61, 98, 160}, {99, 99, 199}, {100, 65535, 160}, },
            {{0, 65535, -121}, },
            {{0, 60, -121}, {61, 104, 162}, {105, 105, 200}, {106, 65535, 162}, },
            {{0, 59, 164}, {60, 65535, -122}, },
            {{0, 60, -166}, {61, 113, 164}, {114, 114, 201}, {115, 65535, 164}, },
            {{0, 46, 164}, {47, 47, 202}, {48, 59, 164}, {60, 65535, -122}, },
            {{101, 101, 203}, },
            {{48, 68, -128}, {69, 69, 204}, {70, 122, -128}, },
            {{48, 95, -26}, {97, 103, 33}, {104, 104, 205}, {105, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 107, -80}, {108, 108, 206}, {109, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 114, -133}, {115, 115, 207}, {116, 122, 33}, },
            {{48, 115, -98}, {116, 116, 208}, {117, 122, 33}, },
            {{48, 113, -28}, {114, 114, 209}, {115, 122, 33}, },
            {{48, 109, -38}, {110, 110, 210}, {111, 122, 33}, },
            {{48, 122, -26}, },
            {},
            {{48, 100, -41}, {101, 101, 211}, {102, 122, 33}, },
            {{48, 111, -51}, {112, 112, 212}, {113, 122, 33}, },
            {{48, 57, 67}, {61, 61, 213}, {65, 122, -19}, },
            {},
            {{48, 107, -80}, {108, 108, 214}, {109, 122, 33}, },
            {{48, 115, -98}, {116, 116, 215}, {117, 122, 33}, },
            {{48, 104, -37}, {105, 105, 216}, {106, 122, 33}, },
            {{48, 116, -46}, {117, 117, 217}, {118, 122, 33}, },
            {{48, 104, -37}, {105, 105, 218}, {106, 122, 33}, },
            {{48, 104, -37}, {105, 105, 219}, {106, 122, 33}, },
            {{48, 95, -26}, {97, 97, 220}, {98, 122, 33}, },
            {{48, 113, -28}, {114, 114, 221}, {115, 122, 33}, },
            {{48, 100, -41}, {101, 101, 222}, {102, 122, 33}, },
            {{48, 57, 67}, {61, 61, 223}, {65, 122, -19}, },
            {{48, 57, 67}, {61, 61, 224}, {65, 122, -19}, },
            {{48, 115, -98}, {116, 116, 225}, {117, 122, 33}, },
            {{48, 110, -88}, {111, 111, 226}, {112, 122, 33}, },
            {{48, 115, -98}, {116, 116, 227}, {117, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 100, -41}, {101, 101, 228}, {102, 122, 33}, },
            {{0, 60, -120}, {61, 61, 160}, {62, 62, 229}, {63, 65535, 160}, },
            {{0, 60, -121}, {61, 61, 162}, {62, 62, 230}, {63, 65535, 162}, },
            {{0, 60, -166}, {61, 116, 164}, {117, 117, 231}, {118, 65535, 164}, },
            {{0, 60, -166}, {61, 105, 164}, {106, 106, 232}, {107, 65535, 164}, },
            {},
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 100, -41}, {101, 101, 233}, {102, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 100, -41}, {101, 101, 234}, {102, 122, 33}, },
            {{48, 57, 67}, {61, 61, 235}, {65, 122, -19}, },
            {{48, 114, -133}, {115, 115, 236}, {116, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 57, 67}, {61, 61, 237}, {65, 122, -19}, },
            {},
            {{48, 57, 67}, {61, 61, 238}, {65, 122, -19}, },
            {{48, 116, -46}, {117, 117, 239}, {118, 122, 33}, },
            {{48, 115, -98}, {116, 116, 240}, {117, 122, 33}, },
            {{48, 115, -98}, {116, 116, 241}, {117, 122, 33}, },
            {{48, 114, -133}, {115, 115, 242}, {116, 122, 33}, },
            {{48, 95, -26}, {97, 119, 33}, {120, 120, 243}, {121, 122, 33}, },
            {{48, 98, -77}, {99, 99, 244}, {100, 122, 33}, },
            {{48, 95, -26}, {97, 97, 245}, {98, 122, 33}, },
            {{48, 114, -133}, {115, 115, 246}, {116, 122, 33}, },
            {},
            {},
            {{48, 57, 67}, {61, 61, 247}, {65, 122, -19}, },
            {{48, 95, -26}, {97, 106, 33}, {107, 107, 248}, {108, 122, 33}, },
            {{48, 104, -37}, {105, 105, 249}, {106, 122, 33}, },
            {{48, 57, 67}, {61, 61, 250}, {65, 122, -19}, },
            {{0, 65535, -120}, },
            {{0, 65535, -121}, },
            {{0, 60, -166}, {61, 109, 164}, {110, 110, 251}, {111, 65535, 164}, },
            {{0, 60, -166}, {61, 61, 164}, {62, 62, 252}, {63, 65535, 164}, },
            {{48, 122, -26}, },
            {{48, 113, -28}, {114, 114, 253}, {115, 122, 33}, },
            {},
            {{48, 104, -37}, {105, 105, 254}, {106, 122, 33}, },
            {},
            {},
            {{48, 99, -34}, {100, 100, 255}, {101, 122, 33}, },
            {{48, 116, -46}, {117, 117, 256}, {118, 122, 33}, },
            {{48, 122, -26}, },
            {{48, 115, -98}, {116, 116, 257}, {117, 122, 33}, },
            {{48, 57, 67}, {61, 61, 258}, {65, 122, -19}, },
            {{48, 100, -41}, {101, 101, 259}, {102, 122, 33}, },
            {{48, 115, -98}, {116, 116, 260}, {117, 122, 33}, },
            {{48, 57, 67}, {61, 61, 261}, {65, 122, -19}, },
            {},
            {{48, 116, -46}, {117, 117, 262}, {118, 122, 33}, },
            {{48, 111, -51}, {112, 112, 263}, {113, 122, 33}, },
            {},
            {{0, 60, -166}, {61, 81, 164}, {82, 82, 264}, {83, 65535, 164}, },
            {{0, 65535, -166}, },
            {{48, 57, 67}, {61, 61, 265}, {65, 122, -19}, },
            {{48, 110, -88}, {111, 111, 266}, {112, 122, 33}, },
            {{48, 100, -41}, {101, 101, 267}, {102, 122, 33}, },
            {{48, 99, -34}, {100, 100, 268}, {101, 122, 33}, },
            {{48, 57, 67}, {61, 61, 269}, {65, 122, -19}, },
            {},
            {{48, 57, 67}, {61, 61, 270}, {65, 122, -19}, },
            {{48, 110, -88}, {111, 111, 271}, {112, 122, 33}, },
            {},
            {{48, 111, -51}, {112, 112, 272}, {113, 122, 33}, },
            {{48, 57, 67}, {61, 61, 273}, {65, 122, -19}, },
            {{0, 39, 164}, {40, 40, 274}, {41, 59, 164}, {60, 65535, -122}, },
            {},
            {{48, 109, -38}, {110, 110, 275}, {111, 122, 33}, },
            {{48, 57, 67}, {61, 61, 276}, {65, 122, -19}, },
            {{48, 100, -41}, {101, 101, 277}, {102, 122, 33}, },
            {},
            {},
            {{48, 113, -28}, {114, 114, 278}, {115, 122, 33}, },
            {{48, 122, -26}, },
            {},
            {{0, 40, 279}, {41, 41, 280}, {42, 59, 279}, {60, 60, 281}, {61, 65535, 279}, },
            {{48, 57, 67}, {61, 61, 282}, {65, 122, -19}, },
            {},
            {{48, 57, 67}, {61, 61, 283}, {65, 122, -19}, },
            {{48, 57, 67}, {61, 61, 284}, {65, 122, -19}, },
            {{0, 65535, -276}, },
            {{0, 59, -276}, {60, 60, 285}, {61, 65535, 279}, },
            {{0, 41, -276}, {42, 46, 279}, {47, 47, 286}, {48, 59, 279}, {60, 65535, -276}, },
            {},
            {},
            {},
            {{0, 46, -283}, {47, 47, 287}, {48, 65535, -283}, },
            {{0, 60, -276}, {61, 105, 279}, {106, 106, 288}, {107, 65535, 279}, },
            {{0, 105, -288}, {106, 106, 289}, {107, 65535, 279}, },
            {{0, 60, -276}, {61, 61, 279}, {62, 62, 290}, {63, 65535, 279}, },
            {{0, 61, -290}, {62, 62, 291}, {63, 65535, 279}, },
            {{0, 65535, -276}, },
            {{0, 65535, -276}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {3, 32, 32, 32, -1, 10, 9, -1, 10, 27, 28, 12, 7, 13, 8, 4, 14, 0, 6, 5, 15, 18, 15, -1, 3, 3, 3, 3, 3, 29, 30, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 49, 10, 15, -1, 17, -1, 15, -1, -1, -1, 15, 15, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 33, 3, 3, 3, 3, 3, 3, 31, 3, 20, 3, 3, 24, 3, 23, 3, 3, 3, 3, 3, 3, 22, 3, 3, 3, 19, 3, 3, 3, 3, 25, 3, 3, 2, 3, 16, 16, 16, 17, 11, 11, 45, -1, -1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 2, 16, 3, 3, 3, 35, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, -1, -1, -1, -1, 15, 1, 3, 3, 3, 3, 3, 3, 1, 3, 16, 3, 3, 3, 3, 3, 3, 3, 3, 3, 16, 35, 3, 3, 3, 3, 40, 39, -1, -1, 3, 3, 16, 3, 16, 16, 3, 3, 3, 3, 3, 3, 3, 3, 16, 3, 3, 16, -1, 41, 3, 3, 3, 3, 3, 35, 3, 3, 16, 3, 3, -1, 16, 3, 3, 3, 35, 35, 3, 3, 16, -1, 3, 16, 3, 3, -1, -1, -1, 16, 16, 35, -1, -1, -1, -1, -1, 41, 41, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
