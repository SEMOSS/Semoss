/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.lexer;

import java.io.*;
import prerna.sablecc2.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSort(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCodeAlpha(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPow(line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQuote(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWord(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComparator(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqual(line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSelectorid(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOptionid(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProjectid(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPropid(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLabelid(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJoinid(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTooltipid(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrac(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrac(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCurl(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCurl(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameprefix(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFrameid(line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOutput(line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJava(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TR(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAsOp(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCustom(line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelType(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{10, 10, 1}, {13, 13, 2}, {32, 32, 3}, {33, 33, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {46, 46, 14}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 63, 22}, {65, 69, 23}, {70, 70, 24}, {71, 83, 23}, {84, 84, 25}, {85, 90, 23}, {91, 91, 26}, {93, 93, 27}, {94, 94, 28}, {95, 95, 29}, {97, 97, 30}, {98, 98, 31}, {99, 99, 32}, {100, 100, 33}, {101, 101, 31}, {102, 102, 34}, {103, 104, 31}, {105, 105, 35}, {106, 106, 36}, {107, 107, 31}, {108, 108, 37}, {109, 110, 31}, {111, 111, 38}, {112, 112, 39}, {113, 113, 31}, {114, 114, 40}, {115, 115, 41}, {116, 116, 42}, {117, 117, 43}, {118, 122, 31}, {123, 123, 44}, {124, 124, 45}, {125, 125, 46}, {126, 126, 47}, },
            {},
            {},
            {},
            {{61, 61, 48}, },
            {{0, 33, 49}, {34, 34, 50}, {35, 38, 49}, {39, 39, 51}, {40, 65535, 49}, },
            {},
            {{0, 65535, -7}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{97, 97, 52}, {111, 111, 53}, },
            {},
            {{48, 57, 16}, {65, 90, 23}, {95, 95, 29}, {97, 122, 31}, },
            {},
            {},
            {{61, 61, 54}, {62, 62, 55}, {99, 99, 56}, {106, 106, 57}, },
            {{61, 61, 58}, },
            {{61, 61, 59}, },
            {{108, 108, 60}, },
            {{48, 57, 61}, {65, 122, -18}, },
            {{48, 57, 61}, {65, 65, 62}, {66, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 81, 23}, {82, 82, 63}, {83, 90, 23}, {95, 122, -18}, },
            {},
            {},
            {},
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 114, 31}, {115, 115, 64}, {116, 122, 31}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 113, 31}, {114, 114, 65}, {115, 122, 31}, },
            {{48, 95, -25}, {97, 110, 31}, {111, 111, 66}, {112, 114, 31}, {115, 115, 67}, {116, 122, 31}, },
            {{36, 36, 68}, {48, 95, -25}, {97, 97, 69}, {98, 122, 31}, },
            {{48, 95, -25}, {97, 101, 31}, {102, 102, 70}, {103, 109, 31}, {110, 110, 71}, {111, 122, 31}, },
            {{48, 57, 61}, {61, 61, 72}, {65, 122, -18}, },
            {{48, 57, 61}, {61, 61, 73}, {65, 95, -18}, {97, 100, 31}, {101, 101, 74}, {102, 122, 31}, },
            {{48, 57, 61}, {61, 61, 75}, {65, 95, -18}, {97, 116, 31}, {117, 117, 76}, {118, 122, 31}, },
            {{48, 57, 61}, {61, 61, 77}, {65, 113, -34}, {114, 114, 78}, {115, 122, 31}, },
            {{48, 95, -25}, {97, 104, 31}, {105, 105, 79}, {106, 122, 31}, },
            {{48, 57, 61}, {61, 61, 80}, {65, 100, -39}, {101, 101, 81}, {102, 122, 31}, },
            {{48, 57, 61}, {61, 61, 82}, {65, 113, -34}, {114, 114, 83}, {115, 122, 31}, },
            {{48, 95, -25}, {97, 111, 31}, {112, 112, 84}, {113, 122, 31}, },
            {},
            {},
            {},
            {},
            {},
            {{0, 65535, -7}, },
            {},
            {},
            {{115, 115, 85}, },
            {{117, 117, 86}, },
            {},
            {},
            {{62, 62, 87}, },
            {{62, 62, 88}, },
            {},
            {},
            {{105, 105, 89}, },
            {{48, 122, -25}, },
            {{48, 57, 61}, {65, 75, 23}, {76, 76, 90}, {77, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 84, 23}, {85, 85, 91}, {86, 90, 23}, {95, 122, -18}, },
            {{48, 95, -25}, {97, 98, 31}, {99, 99, 92}, {100, 122, 31}, },
            {{48, 110, -35}, {111, 111, 93}, {112, 122, 31}, },
            {{48, 95, -25}, {97, 118, 31}, {119, 119, 94}, {120, 122, 31}, },
            {{48, 98, -66}, {99, 99, 95}, {100, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 107, 31}, {108, 108, 96}, {109, 122, 31}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 109, 31}, {110, 110, 97}, {111, 122, 31}, },
            {},
            {},
            {{48, 101, -37}, {102, 102, 98}, {103, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 115, 31}, {116, 116, 99}, {117, 122, 31}, },
            {},
            {{48, 110, -35}, {111, 111, 100}, {112, 122, 31}, },
            {{48, 95, -25}, {97, 102, 31}, {103, 103, 101}, {104, 122, 31}, },
            {},
            {{48, 107, -71}, {108, 108, 102}, {109, 122, 31}, },
            {},
            {{48, 95, -25}, {97, 116, 31}, {117, 117, 103}, {118, 122, 31}, },
            {{48, 122, -25}, },
            {},
            {{116, 116, 104}, },
            {{0, 59, 105}, {60, 60, 106}, {61, 65535, 105}, },
            {{0, 31, 107}, {32, 32, 108}, {33, 59, 107}, {60, 60, 109}, {61, 65535, 107}, },
            {{107, 107, 110}, },
            {{48, 57, 61}, {65, 82, 23}, {83, 83, 111}, {84, 90, 23}, {95, 122, -18}, },
            {{48, 57, 61}, {65, 68, 23}, {69, 69, 112}, {70, 90, 23}, {95, 122, -18}, },
            {{48, 122, -25}, },
            {{48, 114, -32}, {115, 115, 113}, {116, 122, 31}, },
            {{48, 109, -73}, {110, 110, 114}, {111, 122, 31}, },
            {{48, 122, -25}, },
            {{48, 114, -32}, {115, 115, 115}, {116, 122, 31}, },
            {{48, 95, -25}, {97, 100, 31}, {101, 101, 116}, {102, 122, 31}, },
            {{48, 115, -78}, {116, 116, 117}, {117, 122, 31}, },
            {{48, 100, -99}, {101, 101, 118}, {102, 111, 31}, {112, 112, 119}, {113, 122, 31}, },
            {{48, 111, -45}, {112, 112, 120}, {113, 122, 31}, },
            {{48, 95, -25}, {97, 103, 31}, {104, 104, 121}, {105, 122, 31}, },
            {{48, 101, -37}, {102, 102, 122}, {103, 122, 31}, },
            {{48, 100, -99}, {101, 101, 123}, {102, 122, 31}, },
            {},
            {{0, 65535, -89}, },
            {{0, 46, 105}, {47, 47, 124}, {48, 59, 105}, {60, 65535, -89}, },
            {{0, 59, 107}, {60, 65535, -90}, },
            {{0, 60, -109}, {61, 113, 107}, {114, 114, 125}, {115, 65535, 107}, },
            {{0, 46, 107}, {47, 47, 126}, {48, 59, 107}, {60, 65535, -90}, },
            {{101, 101, 127}, },
            {{48, 68, -93}, {69, 69, 128}, {70, 122, -93}, },
            {{48, 122, -25}, },
            {{48, 114, -32}, {115, 115, 129}, {116, 122, 31}, },
            {{48, 122, -25}, },
            {{48, 100, -99}, {101, 101, 130}, {102, 122, 31}, },
            {{48, 113, -34}, {114, 114, 131}, {115, 122, 31}, },
            {{46, 46, 132}, {48, 122, -25}, },
            {{48, 113, -34}, {114, 114, 133}, {115, 122, 31}, },
            {{48, 116, -85}, {117, 117, 134}, {118, 122, 31}, },
            {{48, 114, -32}, {115, 115, 135}, {116, 122, 31}, },
            {{48, 115, -78}, {116, 116, 136}, {117, 122, 31}, },
            {{46, 46, 137}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{0, 60, -89}, {61, 98, 105}, {99, 99, 138}, {100, 65535, 105}, },
            {{0, 60, -109}, {61, 116, 107}, {117, 117, 139}, {118, 65535, 107}, },
            {{0, 60, -109}, {61, 105, 107}, {106, 106, 140}, {107, 65535, 107}, },
            {},
            {{48, 122, -25}, },
            {{46, 46, 141}, {48, 122, -25}, },
            {{48, 122, -25}, },
            {{46, 46, 142}, {48, 122, -25}, },
            {{111, 111, 143}, },
            {{46, 46, 144}, {48, 122, -25}, },
            {{48, 115, -78}, {116, 116, 145}, {117, 122, 31}, },
            {{48, 57, 61}, {61, 61, 146}, {65, 122, -18}, },
            {{46, 46, 147}, {48, 122, -25}, },
            {{106, 106, 148}, },
            {{0, 60, -89}, {61, 61, 105}, {62, 62, 149}, {63, 65535, 105}, },
            {{0, 60, -109}, {61, 109, 107}, {110, 110, 150}, {111, 65535, 107}, },
            {{0, 60, -109}, {61, 61, 107}, {62, 62, 151}, {63, 65535, 107}, },
            {{106, 106, 152}, },
            {{106, 106, 153}, },
            {{117, 117, 154}, },
            {{106, 106, 155}, },
            {{48, 122, -25}, },
            {},
            {{111, 111, 156}, },
            {{111, 111, 157}, },
            {{0, 65535, -89}, },
            {{0, 60, -109}, {61, 81, 107}, {82, 82, 158}, {83, 65535, 107}, },
            {{0, 65535, -109}, },
            {{111, 111, 159}, },
            {{111, 111, 160}, },
            {{116, 116, 161}, },
            {{111, 111, 162}, },
            {{117, 117, 163}, },
            {{105, 105, 164}, },
            {{0, 39, 107}, {40, 40, 165}, {41, 59, 107}, {60, 65535, -90}, },
            {{105, 105, 166}, },
            {{105, 105, 167}, },
            {{101, 101, 168}, },
            {{105, 105, 169}, },
            {{116, 116, 170}, },
            {{110, 110, 171}, },
            {{0, 40, 172}, {41, 41, 173}, {42, 59, 172}, {60, 60, 174}, {61, 65535, 172}, },
            {{110, 110, 175}, },
            {{110, 110, 176}, },
            {{114, 114, 177}, },
            {{110, 110, 178}, },
            {{101, 101, 179}, },
            {},
            {{0, 65535, -167}, },
            {{0, 59, -167}, {60, 60, 180}, {61, 65535, 172}, },
            {{0, 41, -167}, {42, 46, 172}, {47, 47, 181}, {48, 59, 172}, {60, 65535, -167}, },
            {},
            {},
            {{46, 46, 182}, },
            {},
            {{114, 114, 183}, },
            {{0, 46, -176}, {47, 47, 184}, {48, 65535, -176}, },
            {{0, 60, -167}, {61, 105, 172}, {106, 106, 185}, {107, 65535, 172}, },
            {{106, 106, 186}, },
            {{46, 46, 187}, },
            {{0, 105, -183}, {106, 106, 188}, {107, 65535, 172}, },
            {{0, 60, -167}, {61, 61, 172}, {62, 62, 189}, {63, 65535, 172}, },
            {{111, 111, 190}, },
            {{106, 106, 191}, },
            {{0, 61, -187}, {62, 62, 192}, {63, 65535, 172}, },
            {{0, 65535, -167}, },
            {{105, 105, 193}, },
            {{111, 111, 194}, },
            {{0, 65535, -167}, },
            {{110, 110, 195}, },
            {{105, 105, 196}, },
            {},
            {{110, 110, 197}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {3, 34, 34, 34, -1, 12, 10, 12, 26, 27, 14, 8, 15, 9, 4, 16, 0, 7, 6, 17, 18, 17, -1, 3, 3, 3, 28, 29, 11, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 30, 40, 31, 12, 17, -1, 13, 13, -1, -1, 17, 17, -1, -1, 17, 17, -1, 3, 3, 3, 3, 3, 3, 3, 32, 3, 3, 3, 24, 23, 3, 20, 3, 21, 3, 3, 19, 3, 25, 3, 2, 39, -1, -1, -1, -1, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 39, -1, -1, -1, -1, -1, -1, 3, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, -1, -1, -1, 17, 1, 3, 1, 3, -1, 3, 3, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, 3, 22, -1, -1, 5, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, 41, 41, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, 36, -1, -1, 41, -1, 41, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
