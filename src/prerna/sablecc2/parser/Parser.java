/* This file was generated by SableCC (http://www.sablecc.org/). */

package prerna.sablecc2.parser;

import prerna.sablecc2.lexer.*;
import prerna.sablecc2.node.*;
import prerna.sablecc2.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PConfiguration node1 = (PConfiguration) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAconfiguration1Configuration */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAconfiguration2Configuration */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AOutputRoutine */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AAssignRoutine */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce AAscriptchain1Scriptchain */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce AAscriptchain2Scriptchain */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce AOtherscript */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce AAssignment */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list);
            }
            break;
            case 8: /* reduce AExpressionScript */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list);
            }
            break;
            case 9: /* reduce AEmbeddedAssignmentScript */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list);
            }
            break;
            case 10: /* reduce AEmbeddedAssignment */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list);
            }
            break;
            case 11: /* reduce ABaseExprExpr */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list);
            }
            break;
            case 12: /* reduce AComparisonExpr */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list);
            }
            break;
            case 13: /* reduce AExprComponentBaseExpr */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list);
            }
            break;
            case 14: /* reduce APlusBaseExpr */
            {
                ArrayList<Object> list = new14();
                push(goTo(8), list);
            }
            break;
            case 15: /* reduce AMinusBaseExpr */
            {
                ArrayList<Object> list = new15();
                push(goTo(8), list);
            }
            break;
            case 16: /* reduce AMultBaseExpr */
            {
                ArrayList<Object> list = new16();
                push(goTo(8), list);
            }
            break;
            case 17: /* reduce ADivBaseExpr */
            {
                ArrayList<Object> list = new17();
                push(goTo(8), list);
            }
            break;
            case 18: /* reduce AModBaseExpr */
            {
                ArrayList<Object> list = new18();
                push(goTo(8), list);
            }
            break;
            case 19: /* reduce ATermExprComponent */
            {
                ArrayList<Object> list = new19();
                push(goTo(9), list);
            }
            break;
            case 20: /* reduce APowerExprComponent */
            {
                ArrayList<Object> list = new20();
                push(goTo(9), list);
            }
            break;
            case 21: /* reduce APower */
            {
                ArrayList<Object> list = new21();
                push(goTo(10), list);
            }
            break;
            case 22: /* reduce ARegTermTerm */
            {
                ArrayList<Object> list = new22();
                push(goTo(11), list);
            }
            break;
            case 23: /* reduce ANegTermTerm */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list);
            }
            break;
            case 24: /* reduce APosTermTerm */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list);
            }
            break;
            case 25: /* reduce ANegTerm */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list);
            }
            break;
            case 26: /* reduce APosTerm */
            {
                ArrayList<Object> list = new26();
                push(goTo(13), list);
            }
            break;
            case 27: /* reduce AScalarRegTerm */
            {
                ArrayList<Object> list = new27();
                push(goTo(14), list);
            }
            break;
            case 28: /* reduce AMapRegTerm */
            {
                ArrayList<Object> list = new28();
                push(goTo(14), list);
            }
            break;
            case 29: /* reduce AFormulaRegTerm */
            {
                ArrayList<Object> list = new29();
                push(goTo(14), list);
            }
            break;
            case 30: /* reduce AOpformulaRegTerm */
            {
                ArrayList<Object> list = new30();
                push(goTo(14), list);
            }
            break;
            case 31: /* reduce AFrameopRegTerm */
            {
                ArrayList<Object> list = new31();
                push(goTo(14), list);
            }
            break;
            case 32: /* reduce ARefRegTerm */
            {
                ArrayList<Object> list = new32();
                push(goTo(14), list);
            }
            break;
            case 33: /* reduce ADotcolRegTerm */
            {
                ArrayList<Object> list = new33();
                push(goTo(14), list);
            }
            break;
            case 34: /* reduce AJavaOpRegTerm */
            {
                ArrayList<Object> list = new34();
                push(goTo(14), list);
            }
            break;
            case 35: /* reduce AROpRegTerm */
            {
                ArrayList<Object> list = new35();
                push(goTo(14), list);
            }
            break;
            case 36: /* reduce AListRegTerm */
            {
                ArrayList<Object> list = new36();
                push(goTo(14), list);
            }
            break;
            case 37: /* reduce ACsvRegTerm */
            {
                ArrayList<Object> list = new37();
                push(goTo(14), list);
            }
            break;
            case 38: /* reduce AFormula */
            {
                ArrayList<Object> list = new38();
                push(goTo(15), list);
            }
            break;
            case 39: /* reduce AList */
            {
                ArrayList<Object> list = new39();
                push(goTo(16), list);
            }
            break;
            case 40: /* reduce AOtherExpr */
            {
                ArrayList<Object> list = new40();
                push(goTo(17), list);
            }
            break;
            case 41: /* reduce AAoperationformula1OperationFormula */
            {
                ArrayList<Object> list = new41();
                push(goTo(18), list);
            }
            break;
            case 42: /* reduce AAoperationformula2OperationFormula */
            {
                ArrayList<Object> list = new42();
                push(goTo(18), list);
            }
            break;
            case 43: /* reduce AAframeop1Frameop */
            {
                ArrayList<Object> list = new43();
                push(goTo(19), list);
            }
            break;
            case 44: /* reduce AAframeop2Frameop */
            {
                ArrayList<Object> list = new44();
                push(goTo(19), list);
            }
            break;
            case 45: /* reduce AAframeop3Frameop */
            {
                ArrayList<Object> list = new45();
                push(goTo(19), list);
            }
            break;
            case 46: /* reduce AAframeop4Frameop */
            {
                ArrayList<Object> list = new46();
                push(goTo(19), list);
            }
            break;
            case 47: /* reduce AAgenrow1$Expr1GenRow */
            {
                ArrayList<Object> list = new47();
                push(goTo(20), list);
            }
            break;
            case 48: /* reduce AAgenrow1$Prop1GenRow */
            {
                ArrayList<Object> list = new48();
                push(goTo(20), list);
            }
            break;
            case 49: /* reduce AAgenrow1$Relation1GenRow */
            {
                ArrayList<Object> list = new49();
                push(goTo(20), list);
            }
            break;
            case 50: /* reduce AAgenrow2$Expr1GenRow */
            {
                ArrayList<Object> list = new50();
                push(goTo(20), list);
            }
            break;
            case 51: /* reduce AAgenrow2$Prop1GenRow */
            {
                ArrayList<Object> list = new51();
                push(goTo(20), list);
            }
            break;
            case 52: /* reduce AAgenrow2$Relation1GenRow */
            {
                ArrayList<Object> list = new52();
                push(goTo(20), list);
            }
            break;
            case 53: /* reduce AAplainrow1PlainRow */
            {
                ArrayList<Object> list = new53();
                push(goTo(21), list);
            }
            break;
            case 54: /* reduce AAplainrow2$Expr1PlainRow */
            {
                ArrayList<Object> list = new54();
                push(goTo(21), list);
            }
            break;
            case 55: /* reduce AAplainrow2$Prop1PlainRow */
            {
                ArrayList<Object> list = new55();
                push(goTo(21), list);
            }
            break;
            case 56: /* reduce AAplainrow2$Relation1PlainRow */
            {
                ArrayList<Object> list = new56();
                push(goTo(21), list);
            }
            break;
            case 57: /* reduce AAplainrow3PlainRow */
            {
                ArrayList<Object> list = new57();
                push(goTo(21), list);
            }
            break;
            case 58: /* reduce AAplainrow4$Expr1PlainRow */
            {
                ArrayList<Object> list = new58();
                push(goTo(21), list);
            }
            break;
            case 59: /* reduce AAplainrow4$Prop1PlainRow */
            {
                ArrayList<Object> list = new59();
                push(goTo(21), list);
            }
            break;
            case 60: /* reduce AAplainrow4$Relation1PlainRow */
            {
                ArrayList<Object> list = new60();
                push(goTo(21), list);
            }
            break;
            case 61: /* reduce AExpr1Othercol */
            {
                ArrayList<Object> list = new61();
                push(goTo(22), list);
            }
            break;
            case 62: /* reduce AProp1Othercol */
            {
                ArrayList<Object> list = new62();
                push(goTo(22), list);
            }
            break;
            case 63: /* reduce ARelation1Othercol */
            {
                ArrayList<Object> list = new63();
                push(goTo(22), list);
            }
            break;
            case 64: /* reduce ASelectNoun */
            {
                ArrayList<Object> list = new64();
                push(goTo(23), list);
            }
            break;
            case 65: /* reduce AProjectNoun */
            {
                ArrayList<Object> list = new65();
                push(goTo(23), list);
            }
            break;
            case 66: /* reduce ALabelsNoun */
            {
                ArrayList<Object> list = new66();
                push(goTo(23), list);
            }
            break;
            case 67: /* reduce ATooltipsNoun */
            {
                ArrayList<Object> list = new67();
                push(goTo(23), list);
            }
            break;
            case 68: /* reduce AOthersNoun */
            {
                ArrayList<Object> list = new68();
                push(goTo(23), list);
            }
            break;
            case 69: /* reduce APropsNoun */
            {
                ArrayList<Object> list = new69();
                push(goTo(23), list);
            }
            break;
            case 70: /* reduce ACodeNoun */
            {
                ArrayList<Object> list = new70();
                push(goTo(23), list);
            }
            break;
            case 71: /* reduce AOthernoun */
            {
                ArrayList<Object> list = new71();
                push(goTo(24), list);
            }
            break;
            case 72: /* reduce AGeneric */
            {
                ArrayList<Object> list = new72();
                push(goTo(25), list);
            }
            break;
            case 73: /* reduce ASelectors */
            {
                ArrayList<Object> list = new73();
                push(goTo(26), list);
            }
            break;
            case 74: /* reduce AProjectors */
            {
                ArrayList<Object> list = new74();
                push(goTo(27), list);
            }
            break;
            case 75: /* reduce ALabels */
            {
                ArrayList<Object> list = new75();
                push(goTo(28), list);
            }
            break;
            case 76: /* reduce AProps */
            {
                ArrayList<Object> list = new76();
                push(goTo(29), list);
            }
            break;
            case 77: /* reduce ATooltips */
            {
                ArrayList<Object> list = new77();
                push(goTo(30), list);
            }
            break;
            case 78: /* reduce AJoins */
            {
                ArrayList<Object> list = new78();
                push(goTo(31), list);
            }
            break;
            case 79: /* reduce AProp */
            {
                ArrayList<Object> list = new79();
                push(goTo(32), list);
            }
            break;
            case 80: /* reduce AAsop */
            {
                ArrayList<Object> list = new80();
                push(goTo(33), list);
            }
            break;
            case 81: /* reduce AExplicitRelationship */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list);
            }
            break;
            case 82: /* reduce AImplicitRelationship */
            {
                ArrayList<Object> list = new82();
                push(goTo(34), list);
            }
            break;
            case 83: /* reduce AExpr1$Expr2ImplicitRel */
            {
                ArrayList<Object> list = new83();
                push(goTo(35), list);
            }
            break;
            case 84: /* reduce AExpr1$Prop2ImplicitRel */
            {
                ArrayList<Object> list = new84();
                push(goTo(35), list);
            }
            break;
            case 85: /* reduce AExpr1$Relation2ImplicitRel */
            {
                ArrayList<Object> list = new85();
                push(goTo(35), list);
            }
            break;
            case 86: /* reduce AProp1$Expr2ImplicitRel */
            {
                ArrayList<Object> list = new86();
                push(goTo(35), list);
            }
            break;
            case 87: /* reduce AProp1$Prop2ImplicitRel */
            {
                ArrayList<Object> list = new87();
                push(goTo(35), list);
            }
            break;
            case 88: /* reduce AProp1$Relation2ImplicitRel */
            {
                ArrayList<Object> list = new88();
                push(goTo(35), list);
            }
            break;
            case 89: /* reduce ARelation1$Expr2ImplicitRel */
            {
                ArrayList<Object> list = new89();
                push(goTo(35), list);
            }
            break;
            case 90: /* reduce ARelation1$Prop2ImplicitRel */
            {
                ArrayList<Object> list = new90();
                push(goTo(35), list);
            }
            break;
            case 91: /* reduce ARelation1$Relation2ImplicitRel */
            {
                ArrayList<Object> list = new91();
                push(goTo(35), list);
            }
            break;
            case 92: /* reduce AExpr1$Expr2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new92();
                push(goTo(36), list);
            }
            break;
            case 93: /* reduce AExpr1$Expr2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new93();
                push(goTo(36), list);
            }
            break;
            case 94: /* reduce AExpr1$Expr2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new94();
                push(goTo(36), list);
            }
            break;
            case 95: /* reduce AExpr1$Prop2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new95();
                push(goTo(36), list);
            }
            break;
            case 96: /* reduce AExpr1$Prop2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new96();
                push(goTo(36), list);
            }
            break;
            case 97: /* reduce AExpr1$Prop2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new97();
                push(goTo(36), list);
            }
            break;
            case 98: /* reduce AExpr1$Relation2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new98();
                push(goTo(36), list);
            }
            break;
            case 99: /* reduce AExpr1$Relation2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new99();
                push(goTo(36), list);
            }
            break;
            case 100: /* reduce AExpr1$Relation2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new100();
                push(goTo(36), list);
            }
            break;
            case 101: /* reduce AProp1$Expr2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new101();
                push(goTo(36), list);
            }
            break;
            case 102: /* reduce AProp1$Expr2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new102();
                push(goTo(36), list);
            }
            break;
            case 103: /* reduce AProp1$Expr2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new103();
                push(goTo(36), list);
            }
            break;
            case 104: /* reduce AProp1$Prop2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new104();
                push(goTo(36), list);
            }
            break;
            case 105: /* reduce AProp1$Prop2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new105();
                push(goTo(36), list);
            }
            break;
            case 106: /* reduce AProp1$Prop2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new106();
                push(goTo(36), list);
            }
            break;
            case 107: /* reduce AProp1$Relation2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new107();
                push(goTo(36), list);
            }
            break;
            case 108: /* reduce AProp1$Relation2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new108();
                push(goTo(36), list);
            }
            break;
            case 109: /* reduce AProp1$Relation2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new109();
                push(goTo(36), list);
            }
            break;
            case 110: /* reduce ARelation1$Expr2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new110();
                push(goTo(36), list);
            }
            break;
            case 111: /* reduce ARelation1$Expr2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new111();
                push(goTo(36), list);
            }
            break;
            case 112: /* reduce ARelation1$Expr2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new112();
                push(goTo(36), list);
            }
            break;
            case 113: /* reduce ARelation1$Prop2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new113();
                push(goTo(36), list);
            }
            break;
            case 114: /* reduce ARelation1$Prop2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new114();
                push(goTo(36), list);
            }
            break;
            case 115: /* reduce ARelation1$Prop2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new115();
                push(goTo(36), list);
            }
            break;
            case 116: /* reduce ARelation1$Relation2$Expr3ExplicitRel */
            {
                ArrayList<Object> list = new116();
                push(goTo(36), list);
            }
            break;
            case 117: /* reduce ARelation1$Relation2$Prop3ExplicitRel */
            {
                ArrayList<Object> list = new117();
                push(goTo(36), list);
            }
            break;
            case 118: /* reduce ARelation1$Relation2$Relation3ExplicitRel */
            {
                ArrayList<Object> list = new118();
                push(goTo(36), list);
            }
            break;
            case 119: /* reduce AJavaOp */
            {
                ArrayList<Object> list = new119();
                push(goTo(37), list);
            }
            break;
            case 120: /* reduce AROp */
            {
                ArrayList<Object> list = new120();
                push(goTo(38), list);
            }
            break;
            case 121: /* reduce ARcol */
            {
                ArrayList<Object> list = new121();
                push(goTo(39), list);
            }
            break;
            case 122: /* reduce ADotcol */
            {
                ArrayList<Object> list = new122();
                push(goTo(40), list);
            }
            break;
            case 123: /* reduce AAmap1Map */
            {
                ArrayList<Object> list = new123();
                push(goTo(41), list);
            }
            break;
            case 124: /* reduce AAmap2Map */
            {
                ArrayList<Object> list = new124();
                push(goTo(41), list);
            }
            break;
            case 125: /* reduce AMapEntry */
            {
                ArrayList<Object> list = new125();
                push(goTo(42), list);
            }
            break;
            case 126: /* reduce AOtherMapEntry */
            {
                ArrayList<Object> list = new126();
                push(goTo(43), list);
            }
            break;
            case 127: /* reduce ASimpleScalarValues */
            {
                ArrayList<Object> list = new127();
                push(goTo(44), list);
            }
            break;
            case 128: /* reduce AVectorValues */
            {
                ArrayList<Object> list = new128();
                push(goTo(44), list);
            }
            break;
            case 129: /* reduce ANestedMapValues */
            {
                ArrayList<Object> list = new129();
                push(goTo(44), list);
            }
            break;
            case 130: /* reduce AAmapscalarlist1MapScalarList */
            {
                ArrayList<Object> list = new130();
                push(goTo(45), list);
            }
            break;
            case 131: /* reduce AAmapscalarlist2MapScalarList */
            {
                ArrayList<Object> list = new131();
                push(goTo(45), list);
            }
            break;
            case 132: /* reduce AAmapscalarlist3MapScalarList */
            {
                ArrayList<Object> list = new132();
                push(goTo(45), list);
            }
            break;
            case 133: /* reduce AAmapscalarlist4MapScalarList */
            {
                ArrayList<Object> list = new133();
                push(goTo(45), list);
            }
            break;
            case 134: /* reduce AOtherScalar */
            {
                ArrayList<Object> list = new134();
                push(goTo(46), list);
            }
            break;
            case 135: /* reduce ANumScalar */
            {
                ArrayList<Object> list = new135();
                push(goTo(47), list);
            }
            break;
            case 136: /* reduce AWordOrIdScalar */
            {
                ArrayList<Object> list = new136();
                push(goTo(47), list);
            }
            break;
            case 137: /* reduce ABooleanScalar */
            {
                ArrayList<Object> list = new137();
                push(goTo(47), list);
            }
            break;
            case 138: /* reduce AWordWordOrId */
            {
                ArrayList<Object> list = new138();
                push(goTo(48), list);
            }
            break;
            case 139: /* reduce AIdWordOrId */
            {
                ArrayList<Object> list = new139();
                push(goTo(48), list);
            }
            break;
            case 140: /* reduce AWholeDecimalDecimal */
            {
                ArrayList<Object> list = new140();
                push(goTo(49), list);
            }
            break;
            case 141: /* reduce AFractionDecimalDecimal */
            {
                ArrayList<Object> list = new141();
                push(goTo(49), list);
            }
            break;
            case 142: /* reduce AAwholedecimal1WholeDecimal */
            {
                ArrayList<Object> list = new142();
                push(goTo(50), list);
            }
            break;
            case 143: /* reduce AAwholedecimal2WholeDecimal */
            {
                ArrayList<Object> list = new143();
                push(goTo(50), list);
            }
            break;
            case 144: /* reduce AAwholedecimal3WholeDecimal */
            {
                ArrayList<Object> list = new144();
                push(goTo(50), list);
            }
            break;
            case 145: /* reduce AAwholedecimal4WholeDecimal */
            {
                ArrayList<Object> list = new145();
                push(goTo(50), list);
            }
            break;
            case 146: /* reduce AFractionDecimal */
            {
                ArrayList<Object> list = new146();
                push(goTo(51), list);
            }
            break;
            case 147: /* reduce ATerminal$Routine */
            {
                ArrayList<Object> list = new147();
                push(goTo(52), list);
            }
            break;
            case 148: /* reduce ANonTerminal$Routine */
            {
                ArrayList<Object> list = new148();
                push(goTo(52), list);
            }
            break;
            case 149: /* reduce ATerminal$Otherscript */
            {
                ArrayList<Object> list = new149();
                push(goTo(53), list);
            }
            break;
            case 150: /* reduce ANonTerminal$Otherscript */
            {
                ArrayList<Object> list = new150();
                push(goTo(53), list);
            }
            break;
            case 151: /* reduce ATerminal$OtherExpr */
            {
                ArrayList<Object> list = new151();
                push(goTo(54), list);
            }
            break;
            case 152: /* reduce ANonTerminal$OtherExpr */
            {
                ArrayList<Object> list = new152();
                push(goTo(54), list);
            }
            break;
            case 153: /* reduce ATerminal$Othernoun */
            {
                ArrayList<Object> list = new153();
                push(goTo(55), list);
            }
            break;
            case 154: /* reduce ANonTerminal$Othernoun */
            {
                ArrayList<Object> list = new154();
                push(goTo(55), list);
            }
            break;
            case 155: /* reduce ATerminal$Othercol */
            {
                ArrayList<Object> list = new155();
                push(goTo(56), list);
            }
            break;
            case 156: /* reduce ANonTerminal$Othercol */
            {
                ArrayList<Object> list = new156();
                push(goTo(56), list);
            }
            break;
            case 157: /* reduce ATerminal$OtherMapEntry */
            {
                ArrayList<Object> list = new157();
                push(goTo(57), list);
            }
            break;
            case 158: /* reduce ANonTerminal$OtherMapEntry */
            {
                ArrayList<Object> list = new158();
                push(goTo(57), list);
            }
            break;
            case 159: /* reduce ATerminal$OtherScalar */
            {
                ArrayList<Object> list = new159();
                push(goTo(58), list);
            }
            break;
            case 160: /* reduce ANonTerminal$OtherScalar */
            {
                ArrayList<Object> list = new160();
                push(goTo(58), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAconfiguration1Configuration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PConfiguration pconfigurationNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        }

        pconfigurationNode1 = new AConfiguration(listNode2);
        }
	nodeList.add(pconfigurationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAconfiguration2Configuration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConfiguration pconfigurationNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pconfigurationNode1 = new AConfiguration(listNode3);
        }
	nodeList.add(pconfigurationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AOutputRoutine */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRoutine proutineNode1;
        {
            // Block
        PScriptchain pscriptchainNode2;
        TSemicolon tsemicolonNode3;
        pscriptchainNode2 = (PScriptchain)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        proutineNode1 = new AOutputRoutine(pscriptchainNode2, tsemicolonNode3);
        }
	nodeList.add(proutineNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAssignRoutine */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRoutine proutineNode1;
        {
            // Block
        PAssignment passignmentNode2;
        TSemicolon tsemicolonNode3;
        passignmentNode2 = (PAssignment)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        proutineNode1 = new AAssignRoutine(passignmentNode2, tsemicolonNode3);
        }
	nodeList.add(proutineNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAscriptchain1Scriptchain */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScriptchain pscriptchainNode1;
        {
            // Block
        PScript pscriptNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pscriptNode2 = (PScript)nodeArrayList1.get(0);
        {
            // Block
        }

        pscriptchainNode1 = new AScriptchain(pscriptNode2, listNode3);
        }
	nodeList.add(pscriptchainNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAscriptchain2Scriptchain */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScriptchain pscriptchainNode1;
        {
            // Block
        PScript pscriptNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pscriptNode2 = (PScript)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pscriptchainNode1 = new AScriptchain(pscriptNode2, listNode4);
        }
	nodeList.add(pscriptchainNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AOtherscript */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherscript potherscriptNode1;
        {
            // Block
        TCustom tcustomNode2;
        PScript pscriptNode3;
        tcustomNode2 = (TCustom)nodeArrayList1.get(0);
        pscriptNode3 = (PScript)nodeArrayList2.get(0);

        potherscriptNode1 = new AOtherscript(tcustomNode2, pscriptNode3);
        }
	nodeList.add(potherscriptNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AAssignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAssignment passignmentNode1;
        {
            // Block
        PWordOrId pwordoridNode2;
        TEqual tequalNode3;
        PScriptchain pscriptchainNode4;
        pwordoridNode2 = (PWordOrId)nodeArrayList1.get(0);
        tequalNode3 = (TEqual)nodeArrayList2.get(0);
        pscriptchainNode4 = (PScriptchain)nodeArrayList3.get(0);

        passignmentNode1 = new AAssignment(pwordoridNode2, tequalNode3, pscriptchainNode4);
        }
	nodeList.add(passignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AExpressionScript */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScript pscriptNode1;
        {
            // Block
        PExpr pexprNode2;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);

        pscriptNode1 = new AExpressionScript(pexprNode2);
        }
	nodeList.add(pscriptNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AEmbeddedAssignmentScript */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScript pscriptNode1;
        {
            // Block
        PEmbeddedAssignment pembeddedassignmentNode2;
        pembeddedassignmentNode2 = (PEmbeddedAssignment)nodeArrayList1.get(0);

        pscriptNode1 = new AEmbeddedAssignmentScript(pembeddedassignmentNode2);
        }
	nodeList.add(pscriptNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AEmbeddedAssignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEmbeddedAssignment pembeddedassignmentNode1;
        {
            // Block
        TLPar tlparNode2;
        TId tidNode3;
        TEqual tequalNode4;
        PScript pscriptNode5;
        TRPar trparNode6;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tequalNode4 = (TEqual)nodeArrayList3.get(0);
        pscriptNode5 = (PScript)nodeArrayList4.get(0);
        trparNode6 = (TRPar)nodeArrayList5.get(0);

        pembeddedassignmentNode1 = new AEmbeddedAssignment(tlparNode2, tidNode3, tequalNode4, pscriptNode5, trparNode6);
        }
	nodeList.add(pembeddedassignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ABaseExprExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PBaseExpr pbaseexprNode2;
        pbaseexprNode2 = (PBaseExpr)nodeArrayList1.get(0);

        pexprNode1 = new ABaseExprExpr(pbaseexprNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AComparisonExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PBaseExpr pbaseexprNode2;
        TComparator tcomparatorNode3;
        PBaseExpr pbaseexprNode4;
        pbaseexprNode2 = (PBaseExpr)nodeArrayList1.get(0);
        tcomparatorNode3 = (TComparator)nodeArrayList2.get(0);
        pbaseexprNode4 = (PBaseExpr)nodeArrayList3.get(0);

        pexprNode1 = new AComparisonExpr(pbaseexprNode2, tcomparatorNode3, pbaseexprNode4);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AExprComponentBaseExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBaseExpr pbaseexprNode1;
        {
            // Block
        PExprComponent pexprcomponentNode2;
        pexprcomponentNode2 = (PExprComponent)nodeArrayList1.get(0);

        pbaseexprNode1 = new AExprComponentBaseExpr(pexprcomponentNode2);
        }
	nodeList.add(pbaseexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce APlusBaseExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBaseExpr pbaseexprNode1;
        {
            // Block
        PExprComponent pexprcomponentNode2;
        TPlus tplusNode3;
        PBaseExpr pbaseexprNode4;
        pexprcomponentNode2 = (PExprComponent)nodeArrayList1.get(0);
        tplusNode3 = (TPlus)nodeArrayList2.get(0);
        pbaseexprNode4 = (PBaseExpr)nodeArrayList3.get(0);

        pbaseexprNode1 = new APlusBaseExpr(pexprcomponentNode2, tplusNode3, pbaseexprNode4);
        }
	nodeList.add(pbaseexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AMinusBaseExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBaseExpr pbaseexprNode1;
        {
            // Block
        PExprComponent pexprcomponentNode2;
        TMinus tminusNode3;
        PBaseExpr pbaseexprNode4;
        pexprcomponentNode2 = (PExprComponent)nodeArrayList1.get(0);
        tminusNode3 = (TMinus)nodeArrayList2.get(0);
        pbaseexprNode4 = (PBaseExpr)nodeArrayList3.get(0);

        pbaseexprNode1 = new AMinusBaseExpr(pexprcomponentNode2, tminusNode3, pbaseexprNode4);
        }
	nodeList.add(pbaseexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AMultBaseExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBaseExpr pbaseexprNode1;
        {
            // Block
        PExprComponent pexprcomponentNode2;
        TMult tmultNode3;
        PBaseExpr pbaseexprNode4;
        pexprcomponentNode2 = (PExprComponent)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pbaseexprNode4 = (PBaseExpr)nodeArrayList3.get(0);

        pbaseexprNode1 = new AMultBaseExpr(pexprcomponentNode2, tmultNode3, pbaseexprNode4);
        }
	nodeList.add(pbaseexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ADivBaseExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBaseExpr pbaseexprNode1;
        {
            // Block
        PExprComponent pexprcomponentNode2;
        TDiv tdivNode3;
        PBaseExpr pbaseexprNode4;
        pexprcomponentNode2 = (PExprComponent)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pbaseexprNode4 = (PBaseExpr)nodeArrayList3.get(0);

        pbaseexprNode1 = new ADivBaseExpr(pexprcomponentNode2, tdivNode3, pbaseexprNode4);
        }
	nodeList.add(pbaseexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AModBaseExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBaseExpr pbaseexprNode1;
        {
            // Block
        PExprComponent pexprcomponentNode2;
        TMod tmodNode3;
        PBaseExpr pbaseexprNode4;
        pexprcomponentNode2 = (PExprComponent)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        pbaseexprNode4 = (PBaseExpr)nodeArrayList3.get(0);

        pbaseexprNode1 = new AModBaseExpr(pexprcomponentNode2, tmodNode3, pbaseexprNode4);
        }
	nodeList.add(pbaseexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ATermExprComponent */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExprComponent pexprcomponentNode1;
        {
            // Block
        PTerm ptermNode2;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);

        pexprcomponentNode1 = new ATermExprComponent(ptermNode2);
        }
	nodeList.add(pexprcomponentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce APowerExprComponent */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExprComponent pexprcomponentNode1;
        {
            // Block
        PPower ppowerNode2;
        ppowerNode2 = (PPower)nodeArrayList1.get(0);

        pexprcomponentNode1 = new APowerExprComponent(ppowerNode2);
        }
	nodeList.add(pexprcomponentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce APower */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPower ppowerNode1;
        {
            // Block
        PTerm ptermNode2;
        TPow tpowNode3;
        PTerm ptermNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        tpowNode3 = (TPow)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        ppowerNode1 = new APower(ptermNode2, tpowNode3, ptermNode4);
        }
	nodeList.add(ppowerNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ARegTermTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PRegTerm pregtermNode2;
        pregtermNode2 = (PRegTerm)nodeArrayList1.get(0);

        ptermNode1 = new ARegTermTerm(pregtermNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ANegTermTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PNegTerm pnegtermNode2;
        pnegtermNode2 = (PNegTerm)nodeArrayList1.get(0);

        ptermNode1 = new ANegTermTerm(pnegtermNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce APosTermTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PPosTerm ppostermNode2;
        ppostermNode2 = (PPosTerm)nodeArrayList1.get(0);

        ptermNode1 = new APosTermTerm(ppostermNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce ANegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNegTerm pnegtermNode1;
        {
            // Block
        TMinus tminusNode2;
        PTerm ptermNode3;
        tminusNode2 = (TMinus)nodeArrayList1.get(0);
        ptermNode3 = (PTerm)nodeArrayList2.get(0);

        pnegtermNode1 = new ANegTerm(tminusNode2, ptermNode3);
        }
	nodeList.add(pnegtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce APosTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPosTerm ppostermNode1;
        {
            // Block
        TPlus tplusNode2;
        PTerm ptermNode3;
        tplusNode2 = (TPlus)nodeArrayList1.get(0);
        ptermNode3 = (PTerm)nodeArrayList2.get(0);

        ppostermNode1 = new APosTerm(tplusNode2, ptermNode3);
        }
	nodeList.add(ppostermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AScalarRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PScalar pscalarNode2;
        pscalarNode2 = (PScalar)nodeArrayList1.get(0);

        pregtermNode1 = new AScalarRegTerm(pscalarNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AMapRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PMap pmapNode2;
        pmapNode2 = (PMap)nodeArrayList1.get(0);

        pregtermNode1 = new AMapRegTerm(pmapNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AFormulaRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PFormula pformulaNode2;
        pformulaNode2 = (PFormula)nodeArrayList1.get(0);

        pregtermNode1 = new AFormulaRegTerm(pformulaNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AOpformulaRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        POperationFormula poperationformulaNode2;
        poperationformulaNode2 = (POperationFormula)nodeArrayList1.get(0);

        pregtermNode1 = new AOpformulaRegTerm(poperationformulaNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AFrameopRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PFrameop pframeopNode2;
        pframeopNode2 = (PFrameop)nodeArrayList1.get(0);

        pregtermNode1 = new AFrameopRegTerm(pframeopNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ARefRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PRcol prcolNode2;
        prcolNode2 = (PRcol)nodeArrayList1.get(0);

        pregtermNode1 = new ARefRegTerm(prcolNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ADotcolRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PDotcol pdotcolNode2;
        pdotcolNode2 = (PDotcol)nodeArrayList1.get(0);

        pregtermNode1 = new ADotcolRegTerm(pdotcolNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AJavaOpRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PJavaOp pjavaopNode2;
        pjavaopNode2 = (PJavaOp)nodeArrayList1.get(0);

        pregtermNode1 = new AJavaOpRegTerm(pjavaopNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AROpRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PROp propNode2;
        propNode2 = (PROp)nodeArrayList1.get(0);

        pregtermNode1 = new AROpRegTerm(propNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AListRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PList plistNode2;
        plistNode2 = (PList)nodeArrayList1.get(0);

        pregtermNode1 = new AListRegTerm(plistNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ACsvRegTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRegTerm pregtermNode1;
        {
            // Block
        PGenRow pgenrowNode2;
        pgenrowNode2 = (PGenRow)nodeArrayList1.get(0);

        pregtermNode1 = new ACsvRegTerm(pgenrowNode2);
        }
	nodeList.add(pregtermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AFormula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFormula pformulaNode1;
        {
            // Block
        TLPar tlparNode2;
        PExpr pexprNode3;
        TRPar trparNode4;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        trparNode4 = (TRPar)nodeArrayList3.get(0);

        pformulaNode1 = new AFormula(tlparNode2, pexprNode3, trparNode4);
        }
	nodeList.add(pformulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PList plistNode1;
        {
            // Block
        TLPar tlparNode2;
        PExpr pexprNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        plistNode1 = new AList(tlparNode2, pexprNode3, listNode5, trparNode6);
        }
	nodeList.add(plistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AOtherExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherExpr potherexprNode1;
        {
            // Block
        TComma tcommaNode2;
        PExpr pexprNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);

        potherexprNode1 = new AOtherExpr(tcommaNode2, pexprNode3);
        }
	nodeList.add(potherexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAoperationformula1OperationFormula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperationFormula poperationformulaNode1;
        {
            // Block
        TId tidNode2;
        PPlainRow pplainrowNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tidNode2 = (TId)nodeArrayList1.get(0);
        pplainrowNode3 = (PPlainRow)nodeArrayList2.get(0);

        poperationformulaNode1 = new AOperationFormula(tidNode2, pplainrowNode3, null);
        }
	nodeList.add(poperationformulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AAoperationformula2OperationFormula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POperationFormula poperationformulaNode1;
        {
            // Block
        TId tidNode2;
        PPlainRow pplainrowNode3;
        PAsop pasopNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        pplainrowNode3 = (PPlainRow)nodeArrayList2.get(0);
        pasopNode4 = (PAsop)nodeArrayList3.get(0);

        poperationformulaNode1 = new AOperationFormula(tidNode2, pplainrowNode3, pasopNode4);
        }
	nodeList.add(poperationformulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AAframeop1Frameop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFrameop pframeopNode1;
        {
            // Block
        TId tidNode2;
        TLPar tlparNode3;
        PNoun pnounNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pnounNode4 = (PNoun)nodeArrayList3.get(0);
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        pframeopNode1 = new AFrameop(tidNode2, tlparNode3, pnounNode4, listNode5, trparNode6, null);
        }
	nodeList.add(pframeopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AAframeop2Frameop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFrameop pframeopNode1;
        {
            // Block
        TId tidNode2;
        TLPar tlparNode3;
        PNoun pnounNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRPar trparNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pnounNode4 = (PNoun)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        pframeopNode1 = new AFrameop(tidNode2, tlparNode3, pnounNode4, listNode6, trparNode7, null);
        }
	nodeList.add(pframeopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AAframeop3Frameop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFrameop pframeopNode1;
        {
            // Block
        TId tidNode2;
        TLPar tlparNode3;
        PNoun pnounNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        PAsop pasopNode7;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pnounNode4 = (PNoun)nodeArrayList3.get(0);
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);
        pasopNode7 = (PAsop)nodeArrayList5.get(0);

        pframeopNode1 = new AFrameop(tidNode2, tlparNode3, pnounNode4, listNode5, trparNode6, pasopNode7);
        }
	nodeList.add(pframeopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AAframeop4Frameop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFrameop pframeopNode1;
        {
            // Block
        TId tidNode2;
        TLPar tlparNode3;
        PNoun pnounNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRPar trparNode7;
        PAsop pasopNode8;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pnounNode4 = (PNoun)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList5.get(0);
        pasopNode8 = (PAsop)nodeArrayList6.get(0);

        pframeopNode1 = new AFrameop(tidNode2, tlparNode3, pnounNode4, listNode6, trparNode7, pasopNode8);
        }
	nodeList.add(pframeopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AAgenrow1$Expr1GenRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGenRow pgenrowNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRBrac trbracNode6;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        {
            // Block
        }
        trbracNode6 = (TRBrac)nodeArrayList3.get(0);

        pgenrowNode1 = new AGenRow(tlbracNode2, pcoldefNode3, listNode5, trbracNode6);
        }
	nodeList.add(pgenrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AAgenrow1$Prop1GenRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGenRow pgenrowNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRBrac trbracNode6;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        {
            // Block
        }
        trbracNode6 = (TRBrac)nodeArrayList3.get(0);

        pgenrowNode1 = new AGenRow(tlbracNode2, pcoldefNode3, listNode5, trbracNode6);
        }
	nodeList.add(pgenrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AAgenrow1$Relation1GenRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGenRow pgenrowNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRBrac trbracNode6;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        {
            // Block
        }
        trbracNode6 = (TRBrac)nodeArrayList3.get(0);

        pgenrowNode1 = new AGenRow(tlbracNode2, pcoldefNode3, listNode5, trbracNode6);
        }
	nodeList.add(pgenrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AAgenrow2$Expr1GenRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGenRow pgenrowNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRBrac trbracNode7;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trbracNode7 = (TRBrac)nodeArrayList4.get(0);

        pgenrowNode1 = new AGenRow(tlbracNode2, pcoldefNode3, listNode6, trbracNode7);
        }
	nodeList.add(pgenrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AAgenrow2$Prop1GenRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGenRow pgenrowNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRBrac trbracNode7;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trbracNode7 = (TRBrac)nodeArrayList4.get(0);

        pgenrowNode1 = new AGenRow(tlbracNode2, pcoldefNode3, listNode6, trbracNode7);
        }
	nodeList.add(pgenrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AAgenrow2$Relation1GenRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGenRow pgenrowNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRBrac trbracNode7;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trbracNode7 = (TRBrac)nodeArrayList4.get(0);

        pgenrowNode1 = new AGenRow(tlbracNode2, pcoldefNode3, listNode6, trbracNode7);
        }
	nodeList.add(pgenrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AAplainrow1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TRPar trparNode5;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        }
        trparNode5 = (TRPar)nodeArrayList2.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, null, listNode4, trparNode5);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AAplainrow2$Expr1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList3.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, pcoldefNode3, listNode5, trparNode6);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AAplainrow2$Prop1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList3.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, pcoldefNode3, listNode5, trparNode6);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AAplainrow2$Relation1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList3.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, pcoldefNode3, listNode5, trparNode6);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AAplainrow3PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRPar trparNode6;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trparNode6 = (TRPar)nodeArrayList3.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, null, listNode5, trparNode6);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AAplainrow4$Expr1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRPar trparNode7;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList4.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, pcoldefNode3, listNode6, trparNode7);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AAplainrow4$Prop1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRPar trparNode7;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList4.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, pcoldefNode3, listNode6, trparNode7);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AAplainrow4$Relation1PlainRow */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPlainRow pplainrowNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TRPar trparNode7;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList4.get(0);

        pplainrowNode1 = new APlainRow(tlparNode2, pcoldefNode3, listNode6, trparNode7);
        }
	nodeList.add(pplainrowNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AExpr1Othercol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POthercol pothercolNode1;
        {
            // Block
        TComma tcommaNode2;
        PColDef pcoldefNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }

        pothercolNode1 = new AOthercol(tcommaNode2, pcoldefNode3);
        }
	nodeList.add(pothercolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AProp1Othercol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POthercol pothercolNode1;
        {
            // Block
        TComma tcommaNode2;
        PColDef pcoldefNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }

        pothercolNode1 = new AOthercol(tcommaNode2, pcoldefNode3);
        }
	nodeList.add(pothercolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ARelation1Othercol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POthercol pothercolNode1;
        {
            // Block
        TComma tcommaNode2;
        PColDef pcoldefNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }

        pothercolNode1 = new AOthercol(tcommaNode2, pcoldefNode3);
        }
	nodeList.add(pothercolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ASelectNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        PSelectors pselectorsNode2;
        pselectorsNode2 = (PSelectors)nodeArrayList1.get(0);

        pnounNode1 = new ASelectNoun(pselectorsNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AProjectNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        PProjectors pprojectorsNode2;
        pprojectorsNode2 = (PProjectors)nodeArrayList1.get(0);

        pnounNode1 = new AProjectNoun(pprojectorsNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ALabelsNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        PLabels plabelsNode2;
        plabelsNode2 = (PLabels)nodeArrayList1.get(0);

        pnounNode1 = new ALabelsNoun(plabelsNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ATooltipsNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        PTooltips ptooltipsNode2;
        ptooltipsNode2 = (PTooltips)nodeArrayList1.get(0);

        pnounNode1 = new ATooltipsNoun(ptooltipsNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AOthersNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        PGeneric pgenericNode2;
        pgenericNode2 = (PGeneric)nodeArrayList1.get(0);

        pnounNode1 = new AOthersNoun(pgenericNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce APropsNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        PProps ppropsNode2;
        ppropsNode2 = (PProps)nodeArrayList1.get(0);

        pnounNode1 = new APropsNoun(ppropsNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ACodeNoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNoun pnounNode1;
        {
            // Block
        TCodeAlpha tcodealphaNode2;
        tcodealphaNode2 = (TCodeAlpha)nodeArrayList1.get(0);

        pnounNode1 = new ACodeNoun(tcodealphaNode2);
        }
	nodeList.add(pnounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AOthernoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POthernoun pothernounNode1;
        {
            // Block
        TComma tcommaNode2;
        PNoun pnounNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pnounNode3 = (PNoun)nodeArrayList2.get(0);

        pothernounNode1 = new AOthernoun(tcommaNode2, pnounNode3);
        }
	nodeList.add(pothernounNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AGeneric */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PGeneric pgenericNode1;
        {
            // Block
        TId tidNode2;
        TEqual tequalNode3;
        PGenRow pgenrowNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tequalNode3 = (TEqual)nodeArrayList2.get(0);
        pgenrowNode4 = (PGenRow)nodeArrayList3.get(0);

        pgenericNode1 = new AGeneric(tidNode2, tequalNode3, pgenrowNode4);
        }
	nodeList.add(pgenericNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ASelectors */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSelectors pselectorsNode1;
        {
            // Block
        TSelectorid tselectoridNode2;
        PGenRow pgenrowNode3;
        tselectoridNode2 = (TSelectorid)nodeArrayList1.get(0);
        pgenrowNode3 = (PGenRow)nodeArrayList2.get(0);

        pselectorsNode1 = new ASelectors(tselectoridNode2, pgenrowNode3);
        }
	nodeList.add(pselectorsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AProjectors */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProjectors pprojectorsNode1;
        {
            // Block
        TProjectid tprojectidNode2;
        PGenRow pgenrowNode3;
        tprojectidNode2 = (TProjectid)nodeArrayList1.get(0);
        pgenrowNode3 = (PGenRow)nodeArrayList2.get(0);

        pprojectorsNode1 = new AProjectors(tprojectidNode2, pgenrowNode3);
        }
	nodeList.add(pprojectorsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ALabels */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLabels plabelsNode1;
        {
            // Block
        TLabelid tlabelidNode2;
        PGenRow pgenrowNode3;
        tlabelidNode2 = (TLabelid)nodeArrayList1.get(0);
        pgenrowNode3 = (PGenRow)nodeArrayList2.get(0);

        plabelsNode1 = new ALabels(tlabelidNode2, pgenrowNode3);
        }
	nodeList.add(plabelsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AProps */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProps ppropsNode1;
        {
            // Block
        TPropid tpropidNode2;
        PGenRow pgenrowNode3;
        tpropidNode2 = (TPropid)nodeArrayList1.get(0);
        pgenrowNode3 = (PGenRow)nodeArrayList2.get(0);

        ppropsNode1 = new AProps(tpropidNode2, pgenrowNode3);
        }
	nodeList.add(ppropsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ATooltips */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTooltips ptooltipsNode1;
        {
            // Block
        TTooltipid ttooltipidNode2;
        PGenRow pgenrowNode3;
        ttooltipidNode2 = (TTooltipid)nodeArrayList1.get(0);
        pgenrowNode3 = (PGenRow)nodeArrayList2.get(0);

        ptooltipsNode1 = new ATooltips(ttooltipidNode2, pgenrowNode3);
        }
	nodeList.add(ptooltipsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AJoins */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJoins pjoinsNode1;
        {
            // Block
        TJoinid tjoinidNode2;
        PGenRow pgenrowNode3;
        tjoinidNode2 = (TJoinid)nodeArrayList1.get(0);
        pgenrowNode3 = (PGenRow)nodeArrayList2.get(0);

        pjoinsNode1 = new AJoins(tjoinidNode2, pgenrowNode3);
        }
	nodeList.add(pjoinsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AProp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProp ppropNode1;
        {
            // Block
        TId tidNode2;
        TEqual tequalNode3;
        PScalar pscalarNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tequalNode3 = (TEqual)nodeArrayList2.get(0);
        pscalarNode4 = (PScalar)nodeArrayList3.get(0);

        ppropNode1 = new AProp(tidNode2, tequalNode3, pscalarNode4);
        }
	nodeList.add(ppropNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AAsop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAsop pasopNode1;
        {
            // Block
        TAsOp tasopNode2;
        TLPar tlparNode3;
        PGenRow pgenrowNode4;
        TRPar trparNode5;
        tasopNode2 = (TAsOp)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pgenrowNode4 = (PGenRow)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);

        pasopNode1 = new AAsop(tasopNode2, tlparNode3, pgenrowNode4, trparNode5);
        }
	nodeList.add(pasopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AExplicitRelationship */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelationship prelationshipNode1;
        {
            // Block
        PExplicitRel pexplicitrelNode2;
        pexplicitrelNode2 = (PExplicitRel)nodeArrayList1.get(0);

        prelationshipNode1 = new AExplicitRelationship(pexplicitrelNode2);
        }
	nodeList.add(prelationshipNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AImplicitRelationship */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelationship prelationshipNode1;
        {
            // Block
        PImplicitRel pimplicitrelNode2;
        pimplicitrelNode2 = (PImplicitRel)nodeArrayList1.get(0);

        prelationshipNode1 = new AImplicitRelationship(pimplicitrelNode2);
        }
	nodeList.add(prelationshipNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AExpr1$Expr2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AExpr1$Prop2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AExpr1$Relation2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AProp1$Expr2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AProp1$Prop2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AProp1$Relation2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ARelation1$Expr2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce ARelation1$Prop2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ARelation1$Relation2ImplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PImplicitRel pimplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TRPar trparNode10;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        trparNode10 = (TRPar)nodeArrayList7.get(0);

        pimplicitrelNode1 = new AImplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, trparNode10);
        }
	nodeList.add(pimplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AExpr1$Expr2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce AExpr1$Expr2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AExpr1$Expr2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce AExpr1$Prop2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce AExpr1$Prop2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce AExpr1$Prop2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce AExpr1$Relation2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce AExpr1$Relation2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce AExpr1$Relation2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PExpr pexprNode4;
        pexprNode4 = (PExpr)nodeArrayList2.get(0);

        pcoldefNode3 = new AExprColDef(pexprNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce AProp1$Expr2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce AProp1$Expr2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce AProp1$Expr2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce AProp1$Prop2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce AProp1$Prop2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce AProp1$Prop2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce AProp1$Relation2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce AProp1$Relation2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce AProp1$Relation2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PProp ppropNode4;
        ppropNode4 = (PProp)nodeArrayList2.get(0);

        pcoldefNode3 = new APropColDef(ppropNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce ARelation1$Expr2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce ARelation1$Expr2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce ARelation1$Expr2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PExpr pexprNode9;
        pexprNode9 = (PExpr)nodeArrayList6.get(0);

        pcoldefNode8 = new AExprColDef(pexprNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce ARelation1$Prop2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce ARelation1$Prop2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce ARelation1$Prop2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PProp ppropNode9;
        ppropNode9 = (PProp)nodeArrayList6.get(0);

        pcoldefNode8 = new APropColDef(ppropNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce ARelation1$Relation2$Expr3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PExpr pexprNode12;
        pexprNode12 = (PExpr)nodeArrayList8.get(0);

        pcoldefNode11 = new AExprColDef(pexprNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce ARelation1$Relation2$Prop3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PProp ppropNode12;
        ppropNode12 = (PProp)nodeArrayList8.get(0);

        pcoldefNode11 = new APropColDef(ppropNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce ARelation1$Relation2$Relation3ExplicitRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplicitRel pexplicitrelNode1;
        {
            // Block
        TLPar tlparNode2;
        PColDef pcoldefNode3;
        TComma tcommaNode5;
        TRelType treltypeNode6;
        TComma tcommaNode7;
        PColDef pcoldefNode8;
        TComma tcommaNode10;
        PColDef pcoldefNode11;
        TRPar trparNode13;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        {
            // Block
        PRelationship prelationshipNode4;
        prelationshipNode4 = (PRelationship)nodeArrayList2.get(0);

        pcoldefNode3 = new ARelationColDef(prelationshipNode4);
        }
        tcommaNode5 = (TComma)nodeArrayList3.get(0);
        treltypeNode6 = (TRelType)nodeArrayList4.get(0);
        tcommaNode7 = (TComma)nodeArrayList5.get(0);
        {
            // Block
        PRelationship prelationshipNode9;
        prelationshipNode9 = (PRelationship)nodeArrayList6.get(0);

        pcoldefNode8 = new ARelationColDef(prelationshipNode9);
        }
        tcommaNode10 = (TComma)nodeArrayList7.get(0);
        {
            // Block
        PRelationship prelationshipNode12;
        prelationshipNode12 = (PRelationship)nodeArrayList8.get(0);

        pcoldefNode11 = new ARelationColDef(prelationshipNode12);
        }
        trparNode13 = (TRPar)nodeArrayList9.get(0);

        pexplicitrelNode1 = new AExplicitRel(tlparNode2, pcoldefNode3, tcommaNode5, treltypeNode6, tcommaNode7, pcoldefNode8, tcommaNode10, pcoldefNode11, trparNode13);
        }
	nodeList.add(pexplicitrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce AJavaOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJavaOp pjavaopNode1;
        {
            // Block
        TJava tjavaNode2;
        tjavaNode2 = (TJava)nodeArrayList1.get(0);

        pjavaopNode1 = new AJavaOp(tjavaNode2);
        }
	nodeList.add(pjavaopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce AROp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PROp propNode1;
        {
            // Block
        TR trNode2;
        trNode2 = (TR)nodeArrayList1.get(0);

        propNode1 = new AROp(trNode2);
        }
	nodeList.add(propNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce ARcol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRcol prcolNode1;
        {
            // Block
        TFrameprefix tframeprefixNode2;
        TNumber tnumberNode3;
        tframeprefixNode2 = (TFrameprefix)nodeArrayList1.get(0);
        tnumberNode3 = (TNumber)nodeArrayList2.get(0);

        prcolNode1 = new ARcol(tframeprefixNode2, tnumberNode3);
        }
	nodeList.add(prcolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce ADotcol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDotcol pdotcolNode1;
        {
            // Block
        TFrameid tframeidNode2;
        TDot tdotNode3;
        TId tidNode4;
        tframeidNode2 = (TFrameid)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);

        pdotcolNode1 = new ADotcol(tframeidNode2, tdotNode3, tidNode4);
        }
	nodeList.add(pdotcolNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce AAmap1Map */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMap pmapNode1;
        {
            // Block
        TLCurl tlcurlNode2;
        PMapEntry pmapentryNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TRCurl trcurlNode5;
        tlcurlNode2 = (TLCurl)nodeArrayList1.get(0);
        pmapentryNode3 = (PMapEntry)nodeArrayList2.get(0);
        {
            // Block
        }
        trcurlNode5 = (TRCurl)nodeArrayList3.get(0);

        pmapNode1 = new AMap(tlcurlNode2, pmapentryNode3, listNode4, trcurlNode5);
        }
	nodeList.add(pmapNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce AAmap2Map */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMap pmapNode1;
        {
            // Block
        TLCurl tlcurlNode2;
        PMapEntry pmapentryNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRCurl trcurlNode6;
        tlcurlNode2 = (TLCurl)nodeArrayList1.get(0);
        pmapentryNode3 = (PMapEntry)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trcurlNode6 = (TRCurl)nodeArrayList4.get(0);

        pmapNode1 = new AMap(tlcurlNode2, pmapentryNode3, listNode5, trcurlNode6);
        }
	nodeList.add(pmapNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce AMapEntry */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMapEntry pmapentryNode1;
        {
            // Block
        PScalar pscalarNode2;
        TColon tcolonNode3;
        PValues pvaluesNode4;
        pscalarNode2 = (PScalar)nodeArrayList1.get(0);
        tcolonNode3 = (TColon)nodeArrayList2.get(0);
        pvaluesNode4 = (PValues)nodeArrayList3.get(0);

        pmapentryNode1 = new AMapEntry(pscalarNode2, tcolonNode3, pvaluesNode4);
        }
	nodeList.add(pmapentryNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce AOtherMapEntry */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherMapEntry pothermapentryNode1;
        {
            // Block
        TComma tcommaNode2;
        PMapEntry pmapentryNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pmapentryNode3 = (PMapEntry)nodeArrayList2.get(0);

        pothermapentryNode1 = new AOtherMapEntry(tcommaNode2, pmapentryNode3);
        }
	nodeList.add(pothermapentryNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new127() /* reduce ASimpleScalarValues */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValues pvaluesNode1;
        {
            // Block
        PScalar pscalarNode2;
        pscalarNode2 = (PScalar)nodeArrayList1.get(0);

        pvaluesNode1 = new ASimpleScalarValues(pscalarNode2);
        }
	nodeList.add(pvaluesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new128() /* reduce AVectorValues */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValues pvaluesNode1;
        {
            // Block
        PMapScalarList pmapscalarlistNode2;
        pmapscalarlistNode2 = (PMapScalarList)nodeArrayList1.get(0);

        pvaluesNode1 = new AVectorValues(pmapscalarlistNode2);
        }
	nodeList.add(pvaluesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new129() /* reduce ANestedMapValues */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValues pvaluesNode1;
        {
            // Block
        PMap pmapNode2;
        pmapNode2 = (PMap)nodeArrayList1.get(0);

        pvaluesNode1 = new ANestedMapValues(pmapNode2);
        }
	nodeList.add(pvaluesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new130() /* reduce AAmapscalarlist1MapScalarList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMapScalarList pmapscalarlistNode1;
        {
            // Block
        TLBrac tlbracNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TRBrac trbracNode5;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        }
        trbracNode5 = (TRBrac)nodeArrayList2.get(0);

        pmapscalarlistNode1 = new AMapScalarList(tlbracNode2, null, listNode4, trbracNode5);
        }
	nodeList.add(pmapscalarlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new131() /* reduce AAmapscalarlist2MapScalarList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMapScalarList pmapscalarlistNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PScalar pscalarNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TRBrac trbracNode5;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        pscalarNode3 = (PScalar)nodeArrayList2.get(0);
        {
            // Block
        }
        trbracNode5 = (TRBrac)nodeArrayList3.get(0);

        pmapscalarlistNode1 = new AMapScalarList(tlbracNode2, pscalarNode3, listNode4, trbracNode5);
        }
	nodeList.add(pmapscalarlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new132() /* reduce AAmapscalarlist3MapScalarList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMapScalarList pmapscalarlistNode1;
        {
            // Block
        TLBrac tlbracNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRBrac trbracNode6;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trbracNode6 = (TRBrac)nodeArrayList3.get(0);

        pmapscalarlistNode1 = new AMapScalarList(tlbracNode2, null, listNode5, trbracNode6);
        }
	nodeList.add(pmapscalarlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new133() /* reduce AAmapscalarlist4MapScalarList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMapScalarList pmapscalarlistNode1;
        {
            // Block
        TLBrac tlbracNode2;
        PScalar pscalarNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TRBrac trbracNode6;
        tlbracNode2 = (TLBrac)nodeArrayList1.get(0);
        pscalarNode3 = (PScalar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trbracNode6 = (TRBrac)nodeArrayList4.get(0);

        pmapscalarlistNode1 = new AMapScalarList(tlbracNode2, pscalarNode3, listNode5, trbracNode6);
        }
	nodeList.add(pmapscalarlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new134() /* reduce AOtherScalar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherScalar potherscalarNode1;
        {
            // Block
        TComma tcommaNode2;
        PScalar pscalarNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pscalarNode3 = (PScalar)nodeArrayList2.get(0);

        potherscalarNode1 = new AOtherScalar(tcommaNode2, pscalarNode3);
        }
	nodeList.add(potherscalarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new135() /* reduce ANumScalar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScalar pscalarNode1;
        {
            // Block
        PDecimal pdecimalNode2;
        pdecimalNode2 = (PDecimal)nodeArrayList1.get(0);

        pscalarNode1 = new ANumScalar(pdecimalNode2);
        }
	nodeList.add(pscalarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new136() /* reduce AWordOrIdScalar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScalar pscalarNode1;
        {
            // Block
        PWordOrId pwordoridNode2;
        pwordoridNode2 = (PWordOrId)nodeArrayList1.get(0);

        pscalarNode1 = new AWordOrIdScalar(pwordoridNode2);
        }
	nodeList.add(pscalarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new137() /* reduce ABooleanScalar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PScalar pscalarNode1;
        {
            // Block
        TBoolean tbooleanNode2;
        tbooleanNode2 = (TBoolean)nodeArrayList1.get(0);

        pscalarNode1 = new ABooleanScalar(tbooleanNode2);
        }
	nodeList.add(pscalarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new138() /* reduce AWordWordOrId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWordOrId pwordoridNode1;
        {
            // Block
        TWord twordNode2;
        twordNode2 = (TWord)nodeArrayList1.get(0);

        pwordoridNode1 = new AWordWordOrId(twordNode2);
        }
	nodeList.add(pwordoridNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new139() /* reduce AIdWordOrId */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWordOrId pwordoridNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pwordoridNode1 = new AIdWordOrId(tidNode2);
        }
	nodeList.add(pwordoridNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new140() /* reduce AWholeDecimalDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecimal pdecimalNode1;
        {
            // Block
        PWholeDecimal pwholedecimalNode2;
        pwholedecimalNode2 = (PWholeDecimal)nodeArrayList1.get(0);

        pdecimalNode1 = new AWholeDecimalDecimal(pwholedecimalNode2);
        }
	nodeList.add(pdecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new141() /* reduce AFractionDecimalDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecimal pdecimalNode1;
        {
            // Block
        PFractionDecimal pfractiondecimalNode2;
        pfractiondecimalNode2 = (PFractionDecimal)nodeArrayList1.get(0);

        pdecimalNode1 = new AFractionDecimalDecimal(pfractiondecimalNode2);
        }
	nodeList.add(pdecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new142() /* reduce AAwholedecimal1WholeDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWholeDecimal pwholedecimalNode1;
        {
            // Block
        TNumber tnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);

        pwholedecimalNode1 = new AWholeDecimal(tnumberNode2, null, null);
        }
	nodeList.add(pwholedecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new143() /* reduce AAwholedecimal2WholeDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWholeDecimal pwholedecimalNode1;
        {
            // Block
        TNumber tnumberNode2;
        TDot tdotNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);

        pwholedecimalNode1 = new AWholeDecimal(tnumberNode2, tdotNode3, null);
        }
	nodeList.add(pwholedecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new144() /* reduce AAwholedecimal3WholeDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWholeDecimal pwholedecimalNode1;
        {
            // Block
        TNumber tnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TNumber tnumberNode4;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);
        tnumberNode4 = (TNumber)nodeArrayList2.get(0);

        pwholedecimalNode1 = new AWholeDecimal(tnumberNode2, null, tnumberNode4);
        }
	nodeList.add(pwholedecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new145() /* reduce AAwholedecimal4WholeDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWholeDecimal pwholedecimalNode1;
        {
            // Block
        TNumber tnumberNode2;
        TDot tdotNode3;
        TNumber tnumberNode4;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList3.get(0);

        pwholedecimalNode1 = new AWholeDecimal(tnumberNode2, tdotNode3, tnumberNode4);
        }
	nodeList.add(pwholedecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new146() /* reduce AFractionDecimal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFractionDecimal pfractiondecimalNode1;
        {
            // Block
        TDot tdotNode2;
        TNumber tnumberNode3;
        tdotNode2 = (TDot)nodeArrayList1.get(0);
        tnumberNode3 = (TNumber)nodeArrayList2.get(0);

        pfractiondecimalNode1 = new AFractionDecimal(tdotNode2, tnumberNode3);
        }
	nodeList.add(pfractiondecimalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new147() /* reduce ATerminal$Routine */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PRoutine proutineNode1;
        proutineNode1 = (PRoutine)nodeArrayList1.get(0);
	if(proutineNode1 != null)
	{
	  listNode2.add(proutineNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new148() /* reduce ANonTerminal$Routine */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PRoutine proutineNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        proutineNode2 = (PRoutine)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(proutineNode2 != null)
	{
	  listNode3.add(proutineNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new149() /* reduce ATerminal$Otherscript */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        POtherscript potherscriptNode1;
        potherscriptNode1 = (POtherscript)nodeArrayList1.get(0);
	if(potherscriptNode1 != null)
	{
	  listNode2.add(potherscriptNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new150() /* reduce ANonTerminal$Otherscript */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        POtherscript potherscriptNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        potherscriptNode2 = (POtherscript)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(potherscriptNode2 != null)
	{
	  listNode3.add(potherscriptNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new151() /* reduce ATerminal$OtherExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        POtherExpr potherexprNode1;
        potherexprNode1 = (POtherExpr)nodeArrayList1.get(0);
	if(potherexprNode1 != null)
	{
	  listNode2.add(potherexprNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new152() /* reduce ANonTerminal$OtherExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        POtherExpr potherexprNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        potherexprNode2 = (POtherExpr)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(potherexprNode2 != null)
	{
	  listNode3.add(potherexprNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new153() /* reduce ATerminal$Othernoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        POthernoun pothernounNode1;
        pothernounNode1 = (POthernoun)nodeArrayList1.get(0);
	if(pothernounNode1 != null)
	{
	  listNode2.add(pothernounNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new154() /* reduce ANonTerminal$Othernoun */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        POthernoun pothernounNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pothernounNode2 = (POthernoun)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pothernounNode2 != null)
	{
	  listNode3.add(pothernounNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new155() /* reduce ATerminal$Othercol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        POthercol pothercolNode1;
        pothercolNode1 = (POthercol)nodeArrayList1.get(0);
	if(pothercolNode1 != null)
	{
	  listNode2.add(pothercolNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new156() /* reduce ANonTerminal$Othercol */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        POthercol pothercolNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pothercolNode2 = (POthercol)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pothercolNode2 != null)
	{
	  listNode3.add(pothercolNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new157() /* reduce ATerminal$OtherMapEntry */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        POtherMapEntry pothermapentryNode1;
        pothermapentryNode1 = (POtherMapEntry)nodeArrayList1.get(0);
	if(pothermapentryNode1 != null)
	{
	  listNode2.add(pothermapentryNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new158() /* reduce ANonTerminal$OtherMapEntry */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        POtherMapEntry pothermapentryNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pothermapentryNode2 = (POtherMapEntry)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pothermapentryNode2 != null)
	{
	  listNode3.add(pothermapentryNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new159() /* reduce ATerminal$OtherScalar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        POtherScalar potherscalarNode1;
        potherscalarNode1 = (POtherScalar)nodeArrayList1.get(0);
	if(potherscalarNode1 != null)
	{
	  listNode2.add(potherscalarNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new160() /* reduce ANonTerminal$OtherScalar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        POtherScalar potherscalarNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        potherscalarNode2 = (POtherScalar)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(potherscalarNode2 != null)
	{
	  listNode3.add(potherscalarNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 8}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 142}, {0, SHIFT, 45}, {4, SHIFT, 46}, },
			{{-1, REDUCE, 137}, },
			{{-1, REDUCE, 139}, {26, SHIFT, 47}, },
			{{-1, ERROR, 4}, {0, SHIFT, 49}, },
			{{-1, ERROR, 5}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 6}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 138}, },
			{{-1, ERROR, 8}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 54}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 9}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 10}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, },
			{{-1, ERROR, 11}, {0, SHIFT, 66}, },
			{{-1, ERROR, 12}, {4, SHIFT, 67}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 120}, },
			{{-1, ERROR, 15}, {41, ACCEPT, -1}, },
			{{-1, REDUCE, 147}, },
			{{-1, ERROR, 17}, {6, SHIFT, 68}, },
			{{-1, ERROR, 18}, {6, SHIFT, 69}, },
			{{-1, REDUCE, 4}, {39, SHIFT, 70}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 11}, {17, SHIFT, 73}, },
			{{-1, REDUCE, 13}, {8, SHIFT, 74}, {9, SHIFT, 75}, {10, SHIFT, 76}, {14, SHIFT, 77}, {16, SHIFT, 78}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 19}, {11, SHIFT, 79}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 136}, {18, SHIFT, 80}, },
			{{-1, REDUCE, 135}, },
			{{-1, REDUCE, 140}, },
			{{-1, REDUCE, 141}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 8}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 144}, },
			{{-1, REDUCE, 143}, {0, SHIFT, 82}, },
			{{-1, ERROR, 47}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 83}, {4, SHIFT, 4}, {5, SHIFT, 84}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {15, SHIFT, 85}, {19, SHIFT, 86}, {21, SHIFT, 87}, {22, SHIFT, 88}, {23, SHIFT, 89}, {25, SHIFT, 90}, {26, SHIFT, 57}, {27, SHIFT, 91}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 41}, {38, SHIFT, 104}, },
			{{-1, REDUCE, 146}, },
			{{-1, ERROR, 50}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 136}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 139}, {18, SHIFT, 106}, {26, SHIFT, 47}, },
			{{-1, ERROR, 55}, {15, SHIFT, 107}, {27, SHIFT, 108}, },
			{{-1, REDUCE, 139}, {18, SHIFT, 111}, {26, SHIFT, 47}, },
			{{-1, ERROR, 57}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 58}, {15, SHIFT, 85}, {29, SHIFT, 115}, },
			{{-1, ERROR, 59}, {15, SHIFT, 85}, {29, SHIFT, 117}, },
			{{-1, ERROR, 60}, {15, SHIFT, 85}, {29, SHIFT, 119}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 139}, },
			{{-1, ERROR, 64}, {15, SHIFT, 121}, {31, SHIFT, 122}, },
			{{-1, ERROR, 65}, {7, SHIFT, 125}, },
			{{-1, REDUCE, 121}, },
			{{-1, ERROR, 67}, {3, SHIFT, 126}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 70}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 8}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 149}, },
			{{-1, REDUCE, 5}, {39, SHIFT, 70}, },
			{{-1, ERROR, 73}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 74}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 75}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 76}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 77}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 78}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 79}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 80}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 8}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 148}, },
			{{-1, REDUCE, 145}, },
			{{-1, REDUCE, 139}, {18, SHIFT, 137}, {26, SHIFT, 47}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 85}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 86}, {28, SHIFT, 9}, },
			{{-1, ERROR, 87}, {28, SHIFT, 9}, },
			{{-1, ERROR, 88}, {28, SHIFT, 9}, },
			{{-1, ERROR, 89}, {28, SHIFT, 9}, },
			{{-1, ERROR, 90}, {28, SHIFT, 9}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 92}, {15, SHIFT, 85}, {27, SHIFT, 146}, },
			{{-1, REDUCE, 155}, },
			{{-1, ERROR, 94}, {15, SHIFT, 148}, {27, SHIFT, 149}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 101}, {15, SHIFT, 85}, {27, SHIFT, 152}, },
			{{-1, ERROR, 102}, {15, SHIFT, 85}, {27, SHIFT, 154}, },
			{{-1, ERROR, 103}, {15, SHIFT, 85}, {27, SHIFT, 156}, },
			{{-1, ERROR, 104}, {26, SHIFT, 158}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 106}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 8}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 107}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 151}, },
			{{-1, ERROR, 110}, {15, SHIFT, 107}, {27, SHIFT, 161}, },
			{{-1, ERROR, 111}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, },
			{{-1, ERROR, 112}, {15, SHIFT, 164}, {27, SHIFT, 108}, },
			{{-1, ERROR, 113}, {15, SHIFT, 165}, },
			{{-1, ERROR, 114}, {15, SHIFT, 166}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 116}, {15, SHIFT, 85}, {29, SHIFT, 167}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 118}, {15, SHIFT, 85}, {29, SHIFT, 168}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 120}, {15, SHIFT, 85}, {29, SHIFT, 169}, },
			{{-1, ERROR, 121}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 157}, },
			{{-1, ERROR, 124}, {15, SHIFT, 121}, {31, SHIFT, 171}, },
			{{-1, ERROR, 125}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, {28, SHIFT, 173}, {30, SHIFT, 10}, },
			{{-1, REDUCE, 122}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 150}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 137}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, {28, SHIFT, 9}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 54}, },
			{{-1, ERROR, 147}, {15, SHIFT, 85}, {27, SHIFT, 179}, },
			{{-1, ERROR, 148}, {3, SHIFT, 180}, {5, SHIFT, 84}, {19, SHIFT, 86}, {21, SHIFT, 87}, {22, SHIFT, 88}, {23, SHIFT, 89}, {25, SHIFT, 90}, },
			{{-1, REDUCE, 43}, {38, SHIFT, 104}, },
			{{-1, REDUCE, 153}, },
			{{-1, ERROR, 151}, {15, SHIFT, 148}, {27, SHIFT, 183}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 153}, {15, SHIFT, 85}, {27, SHIFT, 185}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 155}, {15, SHIFT, 85}, {27, SHIFT, 186}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 156}, },
			{{-1, ERROR, 158}, {28, SHIFT, 9}, },
			{{-1, ERROR, 159}, {27, SHIFT, 188}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 152}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 164}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 3}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 50}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, {40, SHIFT, 189}, },
			{{-1, ERROR, 165}, {40, SHIFT, 190}, },
			{{-1, ERROR, 166}, {40, SHIFT, 191}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 126}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 158}, },
			{{-1, ERROR, 173}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, {15, SHIFT, 192}, {29, SHIFT, 193}, },
			{{-1, REDUCE, 129}, },
			{{-1, REDUCE, 125}, },
			{{-1, REDUCE, 128}, },
			{{-1, REDUCE, 127}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 180}, {18, SHIFT, 197}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 44}, {38, SHIFT, 104}, },
			{{-1, REDUCE, 154}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 187}, {27, SHIFT, 199}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 189}, {15, SHIFT, 200}, },
			{{-1, ERROR, 190}, {15, SHIFT, 201}, },
			{{-1, ERROR, 191}, {15, SHIFT, 202}, },
			{{-1, ERROR, 192}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 63}, {4, SHIFT, 4}, {13, SHIFT, 7}, },
			{{-1, REDUCE, 130}, },
			{{-1, REDUCE, 159}, },
			{{-1, ERROR, 195}, {15, SHIFT, 192}, {29, SHIFT, 204}, },
			{{-1, ERROR, 196}, {15, SHIFT, 192}, {29, SHIFT, 206}, },
			{{-1, ERROR, 197}, {28, SHIFT, 9}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 200}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 201}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, ERROR, 202}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 134}, },
			{{-1, REDUCE, 131}, },
			{{-1, ERROR, 205}, {15, SHIFT, 192}, {29, SHIFT, 217}, },
			{{-1, REDUCE, 132}, },
			{{-1, REDUCE, 160}, },
			{{-1, ERROR, 208}, {15, SHIFT, 218}, {27, SHIFT, 219}, },
			{{-1, ERROR, 209}, {15, SHIFT, 220}, {27, SHIFT, 221}, },
			{{-1, ERROR, 210}, {15, SHIFT, 222}, {27, SHIFT, 223}, },
			{{-1, ERROR, 211}, {15, SHIFT, 224}, {27, SHIFT, 225}, },
			{{-1, ERROR, 212}, {15, SHIFT, 226}, {27, SHIFT, 227}, },
			{{-1, ERROR, 213}, {15, SHIFT, 228}, {27, SHIFT, 229}, },
			{{-1, ERROR, 214}, {15, SHIFT, 230}, {27, SHIFT, 231}, },
			{{-1, ERROR, 215}, {15, SHIFT, 232}, {27, SHIFT, 233}, },
			{{-1, ERROR, 216}, {15, SHIFT, 234}, {27, SHIFT, 235}, },
			{{-1, REDUCE, 133}, },
			{{-1, ERROR, 218}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 220}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 222}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 224}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 226}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 228}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 230}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 89}, },
			{{-1, ERROR, 232}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 234}, {0, SHIFT, 1}, {1, SHIFT, 2}, {3, SHIFT, 56}, {4, SHIFT, 4}, {8, SHIFT, 5}, {9, SHIFT, 6}, {13, SHIFT, 7}, {26, SHIFT, 57}, {28, SHIFT, 9}, {30, SHIFT, 10}, {32, SHIFT, 11}, {33, SHIFT, 12}, {35, SHIFT, 13}, {36, SHIFT, 14}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 236}, {27, SHIFT, 263}, },
			{{-1, ERROR, 237}, {27, SHIFT, 264}, },
			{{-1, ERROR, 238}, {27, SHIFT, 265}, },
			{{-1, ERROR, 239}, {27, SHIFT, 266}, },
			{{-1, ERROR, 240}, {27, SHIFT, 267}, },
			{{-1, ERROR, 241}, {27, SHIFT, 268}, },
			{{-1, ERROR, 242}, {27, SHIFT, 269}, },
			{{-1, ERROR, 243}, {27, SHIFT, 270}, },
			{{-1, ERROR, 244}, {27, SHIFT, 271}, },
			{{-1, ERROR, 245}, {27, SHIFT, 272}, },
			{{-1, ERROR, 246}, {27, SHIFT, 273}, },
			{{-1, ERROR, 247}, {27, SHIFT, 274}, },
			{{-1, ERROR, 248}, {27, SHIFT, 275}, },
			{{-1, ERROR, 249}, {27, SHIFT, 276}, },
			{{-1, ERROR, 250}, {27, SHIFT, 277}, },
			{{-1, ERROR, 251}, {27, SHIFT, 278}, },
			{{-1, ERROR, 252}, {27, SHIFT, 279}, },
			{{-1, ERROR, 253}, {27, SHIFT, 280}, },
			{{-1, ERROR, 254}, {27, SHIFT, 281}, },
			{{-1, ERROR, 255}, {27, SHIFT, 282}, },
			{{-1, ERROR, 256}, {27, SHIFT, 283}, },
			{{-1, ERROR, 257}, {27, SHIFT, 284}, },
			{{-1, ERROR, 258}, {27, SHIFT, 285}, },
			{{-1, ERROR, 259}, {27, SHIFT, 286}, },
			{{-1, ERROR, 260}, {27, SHIFT, 287}, },
			{{-1, ERROR, 261}, {27, SHIFT, 288}, },
			{{-1, ERROR, 262}, {27, SHIFT, 289}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 99}, },
			{{-1, REDUCE, 100}, },
			{{-1, REDUCE, 101}, },
			{{-1, REDUCE, 102}, },
			{{-1, REDUCE, 103}, },
			{{-1, REDUCE, 104}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 106}, },
			{{-1, REDUCE, 107}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 116}, },
			{{-1, REDUCE, 117}, },
			{{-1, REDUCE, 118}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 15}, },
			{{-1, 16}, {44, 81}, },
			{{-1, 17}, {80, 136}, },
			{{-1, 71}, {72, 128}, },
			{{-1, 18}, },
			{{-1, 19}, {70, 127}, {106, 159}, },
			{{-1, 20}, },
			{{-1, 21}, {8, 55}, {9, 58}, {47, 92}, {50, 55}, {57, 112}, {85, 138}, {107, 160}, {164, 160}, {200, 208}, {201, 211}, {202, 214}, {218, 236}, {220, 239}, {222, 242}, {224, 245}, {226, 248}, {228, 251}, {230, 254}, {232, 257}, {234, 260}, },
			{{-1, 22}, {73, 129}, {74, 130}, {75, 131}, {76, 132}, {77, 133}, {78, 134}, },
			{{-1, 23}, },
			{{-1, 24}, },
			{{-1, 25}, {5, 51}, {6, 53}, {79, 135}, },
			{{-1, 26}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 29}, },
			{{-1, 30}, },
			{{-1, 109}, {110, 162}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 33}, {86, 141}, {87, 142}, {88, 143}, {89, 144}, {90, 145}, {137, 178}, {158, 187}, {197, 178}, },
			{{-1, 48}, },
			{{-1, 93}, {103, 157}, {116, 157}, {118, 157}, {120, 157}, {147, 157}, {153, 157}, {155, 157}, },
			{{-1, 94}, {148, 181}, },
			{{-1, 150}, {151, 184}, },
			{{-1, 95}, },
			{{-1, 96}, },
			{{-1, 97}, },
			{{-1, 98}, },
			{{-1, 99}, },
			{{-1, 100}, },
			{{-1, -1}, },
			{{-1, 59}, {47, 101}, {57, 113}, {85, 139}, {200, 209}, {201, 212}, {202, 215}, {218, 237}, {220, 240}, {222, 243}, {224, 246}, {226, 249}, {228, 252}, {230, 255}, {232, 258}, {234, 261}, },
			{{-1, 105}, {149, 182}, {183, 198}, },
			{{-1, 60}, {47, 102}, {57, 114}, {85, 140}, {200, 210}, {201, 213}, {202, 216}, {218, 238}, {220, 241}, {222, 244}, {224, 247}, {226, 250}, {228, 253}, {230, 256}, {232, 259}, {234, 262}, },
			{{-1, 61}, },
			{{-1, 62}, },
			{{-1, 34}, },
			{{-1, 35}, },
			{{-1, 36}, },
			{{-1, 37}, },
			{{-1, 38}, {125, 174}, },
			{{-1, 64}, {121, 170}, },
			{{-1, 123}, {124, 172}, },
			{{-1, 175}, },
			{{-1, 176}, },
			{{-1, 194}, {196, 207}, {205, 207}, },
			{{-1, 39}, {10, 65}, {111, 163}, {121, 65}, {125, 177}, {137, 163}, {173, 195}, {192, 203}, },
			{{-1, 52}, {0, 40}, {44, 40}, },
			{{-1, 41}, },
			{{-1, 42}, },
			{{-1, 43}, },
			{{-1, 44}, },
			{{-1, 72}, },
			{{-1, 110}, },
			{{-1, 151}, },
			{{-1, 103}, {58, 116}, {59, 118}, {60, 120}, {92, 147}, {101, 153}, {102, 155}, },
			{{-1, 124}, },
			{{-1, 196}, {195, 205}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: number, boolean, id, '.', '+', '-', word, '(', '[', '{', 'f$', 'f', java, r, EOF",
			"expecting: number, '.', ';', ':', '+', '-', '%', '^', '*', ',', '/', comparator, ')', ']', '}', '|'",
			"expecting: ';', ':', '+', '-', '%', '^', '*', ',', '/', comparator, ')', ']', '}', '|'",
			"expecting: ';', '+', '-', '%', '^', '*', ',', '/', comparator, '=', '(', ')', ']', '|'",
			"expecting: number",
			"expecting: number, boolean, id, '.', '+', '-', word, '(', '[', '{', 'f$', 'f', java, r",
			"expecting: ';', ':', '+', '-', '%', '^', '*', ',', '/', comparator, '=', ')', ']', '}', '|'",
			"expecting: number, boolean, id, '.', word",
			"expecting: '.'",
			"expecting: ';', '+', '-', '%', '^', '*', ',', '/', comparator, ')', ']', '|'",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: ';', '|'",
			"expecting: ';', ')', '|'",
			"expecting: ';', ',', comparator, ')', ']', '|'",
			"expecting: ';', '+', '-', '%', '*', ',', '/', comparator, ')', ']', '|'",
			"expecting: ';', '+', '-', '%', '^', '*', '/', comparator, '=', '|'",
			"expecting: number, ';', ':', '+', '-', '%', '^', '*', ',', '/', comparator, ')', ']', '}', '|'",
			"expecting: number, boolean, id, '.', code alpha, '+', '-', word, ',', selectorid, 'p=', 'props=', 'l=', 't=', '(', ')', '[', '{', 'f$', 'f', java, r",
			"expecting: ';', '+', '-', '%', '^', '*', ',', '/', comparator, ')', ']', as op, '|'",
			"expecting: '+', '-', '%', '^', '*', ',', '/', comparator, '=', '(', ')'",
			"expecting: ',', ')'",
			"expecting: '+', '-', '%', '^', '*', ',', '/', comparator, '=', '(', ')', ']'",
			"expecting: ',', ']'",
			"expecting: ',', ')', ']'",
			"expecting: ':', ',', ')', ']', '}'",
			"expecting: ',', '}'",
			"expecting: ':'",
			"expecting: id",
			"expecting: '['",
			"expecting: '('",
			"expecting: ','",
			"expecting: ';', '+', '-', '%', '^', '*', ',', '/', comparator, ')', ']', '}', '|'",
			"expecting: number, boolean, id, '.', word, '[', '{'",
			"expecting: ';', ',', ')', ']', '|'",
			"expecting: number, boolean, id, '.', word, '['",
			"expecting: id, code alpha, selectorid, 'p=', 'props=', 'l=', 't='",
			"expecting: ')'",
			"expecting: number, boolean, id, '.', '+', '-', word, '(', '[', '{', 'f$', 'f', java, r, rel type",
			"expecting: rel type",
			"expecting: number, boolean, id, '.', word, ',', ']'",
			"expecting: '='",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 5, 6, 5, 5, 7, 4, 8, 9, 9, 10, 0, 11, 11, 12, 13, 13, 14, 15, 15, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 16, 2, 2, 2, 0, 2, 17, 18, 19, 2, 5, 9, 2, 9, 20, 21, 22, 5, 23, 23, 23, 24, 24, 25, 26, 27, 9, 28, 0, 0, 5, 12, 12, 5, 5, 5, 5, 5, 5, 5, 5, 0, 2, 20, 21, 5, 29, 29, 29, 29, 29, 19, 21, 24, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 30, 9, 5, 5, 9, 21, 21, 7, 21, 31, 31, 9, 23, 9, 23, 9, 23, 7, 32, 26, 26, 33, 9, 12, 12, 34, 14, 14, 14, 14, 14, 15, 11, 35, 24, 24, 24, 21, 21, 21, 21, 21, 19, 21, 36, 19, 21, 21, 19, 21, 19, 21, 19, 24, 29, 37, 21, 9, 21, 24, 38, 39, 39, 9, 9, 9, 26, 32, 26, 40, 26, 26, 26, 26, 21, 19, 41, 21, 9, 19, 21, 19, 19, 37, 13, 31, 31, 31, 7, 26, 23, 23, 23, 29, 9, 9, 5, 5, 5, 23, 26, 23, 26, 23, 21, 21, 21, 21, 21, 21, 21, 21, 21, 26, 5, 24, 5, 24, 5, 24, 5, 24, 5, 24, 5, 24, 5, 24, 5, 24, 5, 24, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
